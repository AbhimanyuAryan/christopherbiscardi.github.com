{"data":{"root":{"post":{"body":"<p>In this post we will go over how to accept environmental variables in Haskell.</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code><span class=\"highlight__hljs-keyword___som98\">import</span> System.Environment\n\n<span class=\"highlight__hljs-title___1fl8Q\">main</span> :: <span class=\"highlight__hljs-type___11WfV\">IO</span> ()\n<span class=\"highlight__hljs-title___1fl8Q\">main</span> = <span class=\"highlight__hljs-keyword___som98\">do</span>\n</code></pre>\n<p>We can compile this if we put it in a file called <code>env.hs</code>.</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>ghc env.hs\n</code></pre>\n<p>and run it with an ad-hoc ENV variable:</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>myvariable=<span class=\"highlight__hljs-string___1SffY\">\"what\"</span> ./env\n</code></pre>\n<p>Which will print out:</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>&quot;what&quot;\n</code></pre>\n<p>but this will throw an error if the ENV var doesn’t exist:</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>λ ./env\nenv: myvariable: getEnv: does not exist (no environment variable)\n</code></pre>\n<p>To solve that issue we can use <code>lookupEnv</code> with <code>fromMaybe</code></p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code><span class=\"highlight__hljs-keyword___som98\">import</span> System.Environment (<span class=\"highlight__hljs-title___1fl8Q\">lookupEnv</span>)\n<span class=\"highlight__hljs-keyword___som98\">import</span> Data.Maybe (<span class=\"highlight__hljs-title___1fl8Q\">fromMaybe</span>)\n\n<span class=\"highlight__hljs-title___1fl8Q\">main</span> :: <span class=\"highlight__hljs-type___11WfV\">IO</span> ()\n<span class=\"highlight__hljs-title___1fl8Q\">main</span> = <span class=\"highlight__hljs-keyword___som98\">do</span>\n</code></pre>\n<p>which will give us a default value when the ENV variable doesn’t exist:</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>λ ./env\n<span class=\"highlight__hljs-string___1SffY\">\"mydefaultvalue\"</span>\nλ myvariable=<span class=\"highlight__hljs-string___1SffY\">\"what\"</span> ./env\n<span class=\"highlight__hljs-string___1SffY\">\"what\"</span>\n</code></pre>\n","attributes":{"title":"Environment Variables in Haskell","updatedAt":"Feb 6th, 2014","publishedAt":"Feb 6th, 2014","timeToRead":1,"headerImage":null,"url":"/2014/2/6/environment-variables-in-haskell/","canonicalURL":null,"excerpt":"In this post we will go over how to accept environmental variables in Haskell.","__typename":"BlogPostAttributes"},"__typename":"BlogPost"},"__typename":"Query"}}}
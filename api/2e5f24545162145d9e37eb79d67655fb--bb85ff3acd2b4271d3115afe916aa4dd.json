{"data":{"root":{"post":{"body":"<p>If you want to deploy a Clojure/Compojure application you’re going to need a couple hints.</p>\n<p>First, in project.clj you’re going to need to add an item to :dependencies and :main.</p>\n<p>I have some extra dependencies such as hiccup that aren’t strictly necessary. The ring/ring-jetty-adapter is most important.</p>\n<p>under :main write the name of the module that has your (defroutes), we’re going to add a -main function to the same file.</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code><span class=\"highlight__hljs-symbol___mdaTG\">:dependencies</span> [[org.clojure/clojure <span class=\"highlight__hljs-string___1SffY\">\"1.4.0\"</span>]\n              [compojure <span class=\"highlight__hljs-string___1SffY\">\"1.1.5\"</span>]\n              [ring/ring-jetty-adapter <span class=\"highlight__hljs-string___1SffY\">\"1.2.0-beta1\"</span>]\n              [hiccup <span class=\"highlight__hljs-string___1SffY\">\"1.0.2\"</span>]]\n<span class=\"highlight__hljs-symbol___mdaTG\">:main</span> projectname.handler\n</code></pre>\n<p>Now in projectname.handler add :gen-class and ring.adapter.jetty to (use).</p>\n<p>Lower in the same file, include a new function called -main.\nThis is the function java will call to start the server.</p>\n<p>In this case my defroutes was named app-routes so that’s what goes after\nrun-jetty.</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>(<span class=\"hljs-name\"><span class=\"hljs-builtin-name\">ns</span></span> projectname.handler\n (<span class=\"highlight__hljs-symbol___mdaTG\">:gen-class</span>)\n (<span class=\"highlight__hljs-symbol___mdaTG\">:use</span> [compojure.core]\n       [ring.adapter.jetty]\n       [hiccup.core]))\n\n(<span class=\"hljs-name\">defroutes</span> app-routes\n           (<span class=\"hljs-name\">GET</span> <span class=\"highlight__hljs-string___1SffY\">\"/\"</span> [] g/show-home)\n           (<span class=\"hljs-name\">route/resources</span> <span class=\"highlight__hljs-string___1SffY\">\"/\"</span>)\n           (<span class=\"hljs-name\">route/not-found</span> <span class=\"highlight__hljs-string___1SffY\">\"Not Found\"</span>))\n\n(<span class=\"hljs-name\"><span class=\"hljs-builtin-name\">defn</span></span> -main [&amp; args]\n (<span class=\"hljs-name\">run-jetty</span> (<span class=\"hljs-name\">handler/site</span> app-routes) {<span class=\"highlight__hljs-symbol___mdaTG\">:port</span> <span class=\"highlight__hljs-number___2gmaH\">5000</span>}))\n</code></pre>\n<p>That’s it. You should be able to</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>lein compile\nlein uberjar\njava -jar target/whatever-STANDALONE.jar\n</code></pre>\n","attributes":{"title":"Clojure Compojure Jetty Integration","updatedAt":"Feb 18th, 2013","publishedAt":"Feb 18th, 2013","timeToRead":1,"headerImage":null,"url":"/2013/2/17/clojure-compojure-jetty-integration/","canonicalURL":null,"excerpt":"If you want to deploy a Clojure/Compojure application you’re going to need a couple hints.","__typename":"BlogPostAttributes"},"__typename":"BlogPost"},"__typename":"Query"}}}
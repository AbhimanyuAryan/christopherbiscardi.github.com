{"data":{"root":{"post":{"body":"<p>In this post we will examine an example app in which we make a RoboSpice request\nusing GoogleHttpClient.</p>\n<p>The github repo is\n<a href=\"https://github.com/ChristopherBiscardi/robospice-googlehttpclient-example\">here</a>.</p>\n<h2 id=\"dependencies\">Dependencies</h2>\n<p>First, we need to grab the RoboSpice dependency JARs from the <code>repository</code> repo.</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>git <span class=\"highlight__hljs-built_in___3uuyR\">clone</span> https://github.com/octo-online/robospice/tree/repository\n</code></pre>\n<p>Inside of\n<a href=\"https://github.com/octo-online/robospice/tree/repository/dependencies/1.4.11/robospice-google-http-client\">1.4.11/robospice-google-http-client</a>\nare the JARs we need to include in the project. If you are using Eclipse copy\nthe JARs into your <code>libs/</code> folder and add them to the build path in <code>Project -&gt; Properties -&gt; Libraries</code> by clicking <code>Add JARs</code>. You may also need to click the\n<code>Order and Export</code> tab, check their boxes and move the included JARs to the top.</p>\n<p>We will also need one JAR from the Google-Http-Lib\n<a href=\"https://code.google.com/p/google-http-java-client/wiki/Setup#Download_Library_with_Dependencies\">source</a>.\nIt is <code>google-http-client-1.17.0</code>. Again, if using Eclipse, add it to your\nproject in the same way.</p>\n<h2 id=\"classes\">Classes</h2>\n<p>We are going to create a few files:</p>\n<ul>\n<li><a href=\"#spice-base\">BaseSpiceActivity.java</a></li>\n<li><a href=\"#spice-reddit\">Reddit*.java</a></li>\n<li><a href=\"#spice-request-reddit\">SpiceRequestReddit.java</a></li>\n</ul>\n<h4 id=\"basespiceactivity\">BaseSpiceActivity</h4>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code><span class=\"highlight__hljs-keyword___som98\">import</span> com.octo.android.robospice.JacksonGoogleHttpClientSpiceService;\n<span class=\"highlight__hljs-keyword___som98\">import</span> com.octo.android.robospice.SpiceManager;\n\n<span class=\"highlight__hljs-keyword___som98\">public</span> <span class=\"highlight__hljs-class___mOeOV\"><span class=\"highlight__hljs-keyword___som98\">class</span> <span class=\"highlight__hljs-title___1fl8Q\">BaseSpiceActivity</span> <span class=\"highlight__hljs-keyword___som98\">extends</span> <span class=\"highlight__hljs-title___1fl8Q\">Activity</span> </span>{\n\t<span class=\"highlight__hljs-keyword___som98\">private</span> SpiceManager spiceManager = <span class=\"highlight__hljs-keyword___som98\">new</span> SpiceManager(JacksonGoogleHttpClientSpiceService.class);\n\n\t<span class=\"hljs-meta\">@Override</span>\n\t<span class=\"hljs-function\"><span class=\"highlight__hljs-keyword___som98\">protected</span> <span class=\"highlight__hljs-keyword___som98\">void</span> <span class=\"highlight__hljs-title___1fl8Q\">onStart</span><span class=\"hljs-params\">()</span> </span>{\n\t\tspiceManager.start(<span class=\"highlight__hljs-keyword___som98\">this</span>);\n\t\t<span class=\"highlight__hljs-keyword___som98\">super</span>.onStart();\n\t}\n\n\t<span class=\"hljs-meta\">@Override</span>\n\t<span class=\"hljs-function\"><span class=\"highlight__hljs-keyword___som98\">protected</span> <span class=\"highlight__hljs-keyword___som98\">void</span> <span class=\"highlight__hljs-title___1fl8Q\">onStop</span><span class=\"hljs-params\">()</span> </span>{\n\t\tspiceManager.shouldStop();\n\t\t<span class=\"highlight__hljs-keyword___som98\">super</span>.onStop();\n\t}\n\n\t<span class=\"hljs-function\"><span class=\"highlight__hljs-keyword___som98\">protected</span> SpiceManager <span class=\"highlight__hljs-title___1fl8Q\">getSpiceManager</span><span class=\"hljs-params\">()</span> </span>{\n\t\t<span class=\"highlight__hljs-keyword___som98\">return</span> spiceManager;\n\t}\n\n}\n</code></pre>\n<p>The big thing we’re doing in this file is creating an instance of <code>SpiceManager</code>\nthat will be accessible in the activities that inherit from this base class\n(like our <code>MainActivity.java</code> will).</p>\n<p>We then start <code>spiceManager</code> in <code>onStart()</code> and stop it in <code>onStop</code>. This will\nensure that our activities have a <code>SpiceManager</code> accessible when they start and\nclean up after themselves when they stop.</p>\n<p>The final piece is a getter function (<code>getSpiceManager()</code>) so that we have easy\naccess to the <code>spiceManager</code> in our activities.</p>\n<h4 id=\"redditjava\">Reddit*.java</h4>\n<p>We will be getting our data from Reddit, so we first need to examine the\nresponses we’re going to get. I’ve chosen a subreddit where all the posts are\nvery similar (/r/Riak). Here is a sample API response:</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>{\n   <span class=\"highlight__hljs-string___1SffY\">\"kind\"</span>:<span class=\"highlight__hljs-string___1SffY\">\"Listing\"</span>,\n   <span class=\"highlight__hljs-string___1SffY\">\"data\"</span>:{\n      <span class=\"highlight__hljs-string___1SffY\">\"modhash\"</span>:<span class=\"highlight__hljs-string___1SffY\">\"3mxugaulcd1f8b500be09\"</span>,\n      <span class=\"highlight__hljs-string___1SffY\">\"children\"</span>:[\n         {\n            <span class=\"highlight__hljs-string___1SffY\">\"kind\"</span>:<span class=\"highlight__hljs-string___1SffY\">\"t3\"</span>,\n            <span class=\"highlight__hljs-string___1SffY\">\"data\"</span>:{\n               <span class=\"highlight__hljs-string___1SffY\">\"domain\"</span>:<span class=\"highlight__hljs-string___1SffY\">\"github.com\"</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"banned_by\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">null</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"media_embed\"</span>:{\n\n               },\n               <span class=\"highlight__hljs-string___1SffY\">\"subreddit\"</span>:<span class=\"highlight__hljs-string___1SffY\">\"Riak\"</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"selftext_html\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">null</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"selftext\"</span>:<span class=\"highlight__hljs-string___1SffY\">\"\"</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"likes\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">null</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"secure_media\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">null</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"link_flair_text\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">null</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"id\"</span>:<span class=\"highlight__hljs-string___1SffY\">\"19v60r\"</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"secure_media_embed\"</span>:{\n\n               },\n               <span class=\"highlight__hljs-string___1SffY\">\"clicked\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">false</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"stickied\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">false</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"author\"</span>:<span class=\"highlight__hljs-string___1SffY\">\"BonzoESC\"</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"media\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">null</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"score\"</span>:<span class=\"highlight__hljs-number___2gmaH\">1</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"approved_by\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">null</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"over_18\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">false</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"hidden\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">false</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"thumbnail\"</span>:<span class=\"highlight__hljs-string___1SffY\">\"\"</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"subreddit_id\"</span>:<span class=\"highlight__hljs-string___1SffY\">\"t5_2s3vw\"</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"edited\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">false</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"link_flair_css_class\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">null</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"author_flair_css_class\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">null</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"downs\"</span>:<span class=\"highlight__hljs-number___2gmaH\">0</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"saved\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">false</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"is_self\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">false</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"permalink\"</span>:<span class=\"highlight__hljs-string___1SffY\">\"/r/Riak..riak/\"</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"name\"</span>:<span class=\"highlight__hljs-string___1SffY\">\"t3_19v60r\"</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"created\"</span>:<span class=\"highlight__hljs-number___2gmaH\">1362687827.0</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"url\"</span>:<span class=\"highlight__hljs-string___1SffY\">\"https://github.com/basho/riak_dt\"</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"author_flair_text\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">null</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"title\"</span>:<span class=\"highlight__hljs-string___1SffY\">\"riak_dt: CRDT for Riak\"</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"created_utc\"</span>:<span class=\"highlight__hljs-number___2gmaH\">1362687827.0</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"ups\"</span>:<span class=\"highlight__hljs-number___2gmaH\">1</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"num_comments\"</span>:<span class=\"highlight__hljs-number___2gmaH\">0</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"visited\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">false</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"num_reports\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">null</span>,\n               <span class=\"highlight__hljs-string___1SffY\">\"distinguished\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">null</span>\n            }\n         }\n      ],\n      <span class=\"highlight__hljs-string___1SffY\">\"after\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">null</span>,\n      <span class=\"highlight__hljs-string___1SffY\">\"before\"</span>:<span class=\"highlight__hljs-literal___1V6TY\">null</span>\n   }\n}\n</code></pre>\n<p>We will create a few classes to model the data. The first being <code>Reddit.java</code>.</p>\n<p>In <code>Reddit.java</code> we include the keys <code>kind</code> and <code>data</code> using <code>@Key</code>\ndeclarations. Then we declare their types.</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code><span class=\"highlight__hljs-keyword___som98\">package</span> com.christopherbiscardi.robospicetest;\n\n<span class=\"highlight__hljs-keyword___som98\">import</span> com.google.api.client.util.Key;\n\n<span class=\"highlight__hljs-keyword___som98\">public</span> <span class=\"highlight__hljs-class___mOeOV\"><span class=\"highlight__hljs-keyword___som98\">class</span> <span class=\"highlight__hljs-title___1fl8Q\">Reddit</span> </span>{\n\t<span class=\"hljs-meta\">@Key</span>\n\t<span class=\"highlight__hljs-keyword___som98\">private</span> String kind;\n\t<span class=\"hljs-meta\">@Key</span>\n\t<span class=\"highlight__hljs-keyword___som98\">private</span> RedditData data;\n\n\t<span class=\"hljs-function\"><span class=\"highlight__hljs-keyword___som98\">public</span> <span class=\"highlight__hljs-title___1fl8Q\">Reddit</span><span class=\"hljs-params\">()</span> </span>{\n\t}\n</code></pre>\n<p>Then define some basic getters for when we are dealing with our request’s\nresponse.</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>  <span class=\"hljs-function\"><span class=\"highlight__hljs-keyword___som98\">public</span> String <span class=\"highlight__hljs-title___1fl8Q\">getKind</span><span class=\"hljs-params\">()</span> </span>{\n\t\t<span class=\"highlight__hljs-keyword___som98\">return</span> <span class=\"highlight__hljs-keyword___som98\">this</span>.kind;\n\t}\n\n\t<span class=\"hljs-function\"><span class=\"highlight__hljs-keyword___som98\">public</span> RedditData <span class=\"highlight__hljs-title___1fl8Q\">getData</span><span class=\"hljs-params\">()</span> </span>{\n\t\t<span class=\"highlight__hljs-keyword___som98\">return</span> <span class=\"highlight__hljs-keyword___som98\">this</span>.data;\n\t}\n</code></pre>\n<p>and override some utility functions:</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>\t<span class=\"hljs-meta\">@Override</span>\n\t<span class=\"hljs-function\"><span class=\"highlight__hljs-keyword___som98\">public</span> <span class=\"highlight__hljs-keyword___som98\">int</span> <span class=\"highlight__hljs-title___1fl8Q\">hashCode</span><span class=\"hljs-params\">()</span> </span>{\n\t\t<span class=\"highlight__hljs-keyword___som98\">final</span> <span class=\"highlight__hljs-keyword___som98\">int</span> prime = <span class=\"highlight__hljs-number___2gmaH\">31</span>;\n\t\t<span class=\"highlight__hljs-keyword___som98\">int</span> result = <span class=\"highlight__hljs-number___2gmaH\">1</span>;\n\t\tresult = prime * result + ( kind == <span class=\"highlight__hljs-keyword___som98\">null</span> ? <span class=\"highlight__hljs-number___2gmaH\">0</span> : kind.hashCode() ) + ( data == <span class=\"highlight__hljs-keyword___som98\">null</span> ? <span class=\"highlight__hljs-number___2gmaH\">0</span> : data.hashCode() );\n\t\t<span class=\"highlight__hljs-keyword___som98\">return</span> result;\n\t}\n\n\t<span class=\"hljs-meta\">@Override</span>\n\t<span class=\"hljs-function\"><span class=\"highlight__hljs-keyword___som98\">public</span> <span class=\"highlight__hljs-keyword___som98\">boolean</span> <span class=\"highlight__hljs-title___1fl8Q\">equals</span><span class=\"hljs-params\">( Object obj )</span> </span>{\n\t\t<span class=\"highlight__hljs-keyword___som98\">if</span> ( <span class=\"highlight__hljs-keyword___som98\">this</span> == obj ) {\n\t\t\t<span class=\"highlight__hljs-keyword___som98\">return</span> <span class=\"highlight__hljs-keyword___som98\">true</span>;\n\t\t}\n\t\t<span class=\"highlight__hljs-keyword___som98\">if</span> ( obj == <span class=\"highlight__hljs-keyword___som98\">null</span> ) {\n\t\t\t<span class=\"highlight__hljs-keyword___som98\">return</span> <span class=\"highlight__hljs-keyword___som98\">false</span>;\n\t\t}\n\t\t<span class=\"highlight__hljs-keyword___som98\">if</span> ( getClass() != obj.getClass() ) {\n\t\t\t<span class=\"highlight__hljs-keyword___som98\">return</span> <span class=\"highlight__hljs-keyword___som98\">false</span>;\n\t\t}\n\t\tReddit other = (Reddit) obj;\n\t\t<span class=\"highlight__hljs-keyword___som98\">if</span> ( kind == <span class=\"highlight__hljs-keyword___som98\">null</span> ) {\n\t\t\t<span class=\"highlight__hljs-keyword___som98\">if</span> ( other.kind != <span class=\"highlight__hljs-keyword___som98\">null</span> ) {\n\t\t\t\t<span class=\"highlight__hljs-keyword___som98\">return</span> <span class=\"highlight__hljs-keyword___som98\">false</span>;\n\t\t\t}\n\t\t} <span class=\"highlight__hljs-keyword___som98\">else</span> <span class=\"highlight__hljs-keyword___som98\">if</span> ( !kind.equals( other.kind ) ) {\n\t\t\t<span class=\"highlight__hljs-keyword___som98\">return</span> <span class=\"highlight__hljs-keyword___som98\">false</span>;\n\t\t}\n\t\t<span class=\"highlight__hljs-keyword___som98\">return</span> <span class=\"highlight__hljs-keyword___som98\">true</span>;\n\t}\n\n\t<span class=\"hljs-meta\">@Override</span>\n\t<span class=\"hljs-function\"><span class=\"highlight__hljs-keyword___som98\">public</span> String <span class=\"highlight__hljs-title___1fl8Q\">toString</span><span class=\"hljs-params\">()</span> </span>{\n\t\t<span class=\"highlight__hljs-keyword___som98\">return</span> <span class=\"highlight__hljs-string___1SffY\">\"Reddit [kind=\"</span> + kind + <span class=\"highlight__hljs-string___1SffY\">\" \"</span> + data + <span class=\"highlight__hljs-string___1SffY\">\"]\"</span>;\n\t}\n}\n</code></pre>\n<p>The model files will all follow this same format: @Key definitions, getters,\nutilities.</p>\n<p>Our final model (<code>RedditListing.java</code>) is where we are getting the content we\ncare about. We don’t have to include <code>@Key</code> for every key in our JSON response,\nso we’ll just grab the ones we care about:</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>\t<span class=\"hljs-meta\">@Key</span>\n\t<span class=\"highlight__hljs-keyword___som98\">private</span> String domain;\n    <span class=\"hljs-meta\">@Key</span>\n\t<span class=\"highlight__hljs-keyword___som98\">private</span> String author;\n    <span class=\"hljs-meta\">@Key</span>\n\t<span class=\"highlight__hljs-keyword___som98\">private</span> String permalink;\n    <span class=\"hljs-meta\">@Key</span>\n\t<span class=\"highlight__hljs-keyword___som98\">private</span> String title;\n</code></pre>\n<h4 id=\"spicerequestredditjava\">SpiceRequestReddit.java</h4>\n<p>To finish off our classes, we’ll create a SpiceRequest that takes a string (our\nsubreddit) and returns a <code>Reddit</code>.</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code><span class=\"highlight__hljs-keyword___som98\">package</span> com.christopherbiscardi.robospicetest;\n\n<span class=\"highlight__hljs-keyword___som98\">import</span> java.io.IOException;\n\n<span class=\"highlight__hljs-keyword___som98\">import</span> roboguice.util.temp.Ln;\n\n<span class=\"highlight__hljs-keyword___som98\">import</span> com.google.api.client.http.GenericUrl;\n<span class=\"highlight__hljs-keyword___som98\">import</span> com.google.api.client.http.HttpRequest;\n<span class=\"highlight__hljs-keyword___som98\">import</span> com.google.api.client.json.jackson.JacksonFactory;\n<span class=\"highlight__hljs-keyword___som98\">import</span> com.octo.android.robospice.request.googlehttpclient.GoogleHttpClientSpiceRequest;\n\n<span class=\"highlight__hljs-keyword___som98\">public</span> <span class=\"highlight__hljs-class___mOeOV\"><span class=\"highlight__hljs-keyword___som98\">class</span> <span class=\"highlight__hljs-title___1fl8Q\">SpiceRequestReddit</span> <span class=\"highlight__hljs-keyword___som98\">extends</span> <span class=\"highlight__hljs-title___1fl8Q\">GoogleHttpClientSpiceRequest</span>&lt;<span class=\"highlight__hljs-title___1fl8Q\">reddit</span>&gt; </span>{\n\t<span class=\"highlight__hljs-keyword___som98\">private</span> String baseUrl;\n\n    <span class=\"hljs-function\"><span class=\"highlight__hljs-keyword___som98\">public</span> <span class=\"highlight__hljs-title___1fl8Q\">SpiceRequestReddit</span><span class=\"hljs-params\">( String subreddit )</span> </span>{\n        <span class=\"highlight__hljs-keyword___som98\">super</span>( Reddit.class );\n        <span class=\"highlight__hljs-keyword___som98\">this</span>.baseUrl = String.format( <span class=\"highlight__hljs-string___1SffY\">\"http://www.reddit.com/r/%s.json\"</span>, subreddit );\n    }\n\n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"highlight__hljs-keyword___som98\">public</span> Reddit <span class=\"highlight__hljs-title___1fl8Q\">loadDataFromNetwork</span><span class=\"hljs-params\">()</span> <span class=\"highlight__hljs-keyword___som98\">throws</span> IOException </span>{\n        Ln.d( <span class=\"highlight__hljs-string___1SffY\">\"Call web service \"</span> + baseUrl );\n        HttpRequest request = getHttpRequestFactory()<span class=\"highlight__hljs-comment___UYk12\">//</span>\n                .buildGetRequest( <span class=\"highlight__hljs-keyword___som98\">new</span> GenericUrl( baseUrl ) );\n        request.setParser( <span class=\"highlight__hljs-keyword___som98\">new</span> JacksonFactory().createJsonObjectParser() );\n        <span class=\"highlight__hljs-keyword___som98\">return</span> request.execute().parseAs( getResultType() );\n    }\n}&lt;/reddit&gt;\n</code></pre>\n<h2 id=\"calling-the-api\">Calling the API</h2>\n<p>In <code>MainActivity.java</code> we need to add some code to execute the request:</p>\n<p>We need to extend our <code>MainActivity</code> from <code>BaseSpiceActivity</code></p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code><span class=\"highlight__hljs-keyword___som98\">public</span> <span class=\"highlight__hljs-class___mOeOV\"><span class=\"highlight__hljs-keyword___som98\">class</span> <span class=\"highlight__hljs-title___1fl8Q\">MainActivity</span> <span class=\"highlight__hljs-keyword___som98\">extends</span> <span class=\"highlight__hljs-title___1fl8Q\">BaseSpiceActivity</span> </span>{\n</code></pre>\n<p>Add a new <code>SpiceRequestReddit</code></p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>java\nprivate SpiceRequestReddit spiceRequestReddit;\n</code></pre>\n<p>Instantiate it with the Riak subreddit;</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>spiceRequestReddit = <span class=\"highlight__hljs-keyword___som98\">new</span> SpiceRequestReddit( <span class=\"highlight__hljs-string___1SffY\">\"Riak\"</span> );\n</code></pre>\n<p>and implement our ResultHandler class:</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code><span class=\"highlight__hljs-keyword___som98\">public</span> <span class=\"highlight__hljs-keyword___som98\">final</span> <span class=\"highlight__hljs-class___mOeOV\"><span class=\"highlight__hljs-keyword___som98\">class</span> <span class=\"highlight__hljs-title___1fl8Q\">RedditSpiceRequestListener</span> <span class=\"highlight__hljs-keyword___som98\">implements</span> <span class=\"highlight__hljs-title___1fl8Q\">RequestListener</span> </span>{\n\n\t\t<span class=\"hljs-meta\">@Override</span>\n\t\t<span class=\"hljs-function\"><span class=\"highlight__hljs-keyword___som98\">public</span> <span class=\"highlight__hljs-keyword___som98\">void</span> <span class=\"highlight__hljs-title___1fl8Q\">onRequestFailure</span><span class=\"hljs-params\">( SpiceException spiceException )</span> </span>{\n\t\t\tToast.makeText( MainActivity.<span class=\"highlight__hljs-keyword___som98\">this</span>, <span class=\"highlight__hljs-string___1SffY\">\"failure\"</span>, Toast.LENGTH_SHORT ).show();\n\t\t}\n\n\t\t<span class=\"hljs-meta\">@Override</span>\n\t\t<span class=\"hljs-function\"><span class=\"highlight__hljs-keyword___som98\">public</span> <span class=\"highlight__hljs-keyword___som98\">void</span> <span class=\"highlight__hljs-title___1fl8Q\">onRequestSuccess</span><span class=\"hljs-params\">( <span class=\"highlight__hljs-keyword___som98\">final</span> Reddit result )</span> </span>{\n\t\t\tToast.makeText( MainActivity.<span class=\"highlight__hljs-keyword___som98\">this</span>, <span class=\"highlight__hljs-string___1SffY\">\"success\"</span>, Toast.LENGTH_SHORT ).show();\n\t\t\tLog.e(<span class=\"highlight__hljs-string___1SffY\">\"TEST\"</span>,result.getData().toString());\n\t\t\tLog.e(<span class=\"highlight__hljs-string___1SffY\">\"TEST\"</span>,result.getData().getChildren().get(<span class=\"highlight__hljs-number___2gmaH\">0</span>).getData().getTitle());\n\t\t}\n\t}\n</code></pre>\n<p>We’ve just implemented a simple log to view the data, but we could have added it\nto an ArrayAdapter and displayed it in a ListView.</p>\n<p>Finally, we override the <code>onStart()</code> method to actually make the request.</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>  <span class=\"hljs-meta\">@Override</span>\n\t<span class=\"hljs-function\"><span class=\"highlight__hljs-keyword___som98\">protected</span> <span class=\"highlight__hljs-keyword___som98\">void</span> <span class=\"highlight__hljs-title___1fl8Q\">onStart</span><span class=\"hljs-params\">()</span> </span>{\n\t\t<span class=\"highlight__hljs-keyword___som98\">super</span>.onStart();\n\n\t\tsetProgressBarIndeterminate( <span class=\"highlight__hljs-keyword___som98\">false</span> );\n\t\tsetProgressBarVisibility( <span class=\"highlight__hljs-keyword___som98\">true</span> );\n\n\t\tgetSpiceManager().execute( spiceRequestReddit, <span class=\"highlight__hljs-string___1SffY\">\"json\"</span>, DurationInMillis.ONE_MINUTE, <span class=\"highlight__hljs-keyword___som98\">new</span> RedditSpiceRequestListener() );\n\t}\n</code></pre>\n<h2 id=\"androidmanifestxml\">AndroidManifest.xml</h2>\n<p>Now that’s all the code we need to write, but we still need to register our\nservice and permissions in <code>AndroidManifest.xml</code>. Notice we’ve added three\n<code>uses-permission</code> nodes and a <code>service</code> node.</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code><span class=\"php\"><span class=\"hljs-meta\">&lt;?</span>xml version=<span class=\"highlight__hljs-string___1SffY\">\"1.0\"</span> encoding=<span class=\"highlight__hljs-string___1SffY\">\"utf-8\"</span><span class=\"hljs-meta\">?&gt;</span></span>\n<span class=\"highlight__hljs-tag___2Bb-l\">&lt;<span class=\"hljs-name\">manifest</span> <span class=\"hljs-attr\">xmlns:android</span>=<span class=\"highlight__hljs-string___1SffY\">\"http://schemas.android.com/apk/res/android\"</span>\n    <span class=\"hljs-attr\">package</span>=<span class=\"highlight__hljs-string___1SffY\">\"com.christopherbiscardi.robospicetest\"</span>\n    <span class=\"hljs-attr\">android:versionCode</span>=<span class=\"highlight__hljs-string___1SffY\">\"1\"</span>\n    <span class=\"hljs-attr\">android:versionName</span>=<span class=\"highlight__hljs-string___1SffY\">\"1.0\"</span> &gt;</span>\n\n    <span class=\"highlight__hljs-tag___2Bb-l\">&lt;<span class=\"hljs-name\">uses-sdk</span>\n        <span class=\"hljs-attr\">android:minSdkVersion</span>=<span class=\"highlight__hljs-string___1SffY\">\"8\"</span>\n        <span class=\"hljs-attr\">android:targetSdkVersion</span>=<span class=\"highlight__hljs-string___1SffY\">\"17\"</span> /&gt;</span>\n\n    <span class=\"highlight__hljs-tag___2Bb-l\">&lt;<span class=\"hljs-name\">uses-permission</span> <span class=\"hljs-attr\">android:name</span>=<span class=\"highlight__hljs-string___1SffY\">\"android.permission.INTERNET\"</span> /&gt;</span>\n    <span class=\"highlight__hljs-tag___2Bb-l\">&lt;<span class=\"hljs-name\">uses-permission</span> <span class=\"hljs-attr\">android:name</span>=<span class=\"highlight__hljs-string___1SffY\">\"android.permission.ACCESS_NETWORK_STATE\"</span> /&gt;</span>\n    <span class=\"highlight__hljs-tag___2Bb-l\">&lt;<span class=\"hljs-name\">uses-permission</span> <span class=\"hljs-attr\">android:name</span>=<span class=\"highlight__hljs-string___1SffY\">\"android.permission.ACCESS_WIFI_STATE\"</span> /&gt;</span>\n\n    <span class=\"highlight__hljs-tag___2Bb-l\">&lt;<span class=\"hljs-name\">application</span>\n        <span class=\"hljs-attr\">android:allowBackup</span>=<span class=\"highlight__hljs-string___1SffY\">\"true\"</span>\n        <span class=\"hljs-attr\">android:icon</span>=<span class=\"highlight__hljs-string___1SffY\">\"@drawable/ic_launcher\"</span>\n        <span class=\"hljs-attr\">android:label</span>=<span class=\"highlight__hljs-string___1SffY\">\"@string/app_name\"</span>\n        <span class=\"hljs-attr\">android:theme</span>=<span class=\"highlight__hljs-string___1SffY\">\"@style/AppTheme\"</span> &gt;</span>\n        <span class=\"highlight__hljs-tag___2Bb-l\">&lt;<span class=\"hljs-name\">activity</span>\n            <span class=\"hljs-attr\">android:name</span>=<span class=\"highlight__hljs-string___1SffY\">\"com.christopherbiscardi.robospicetest.MainActivity\"</span>\n            <span class=\"hljs-attr\">android:label</span>=<span class=\"highlight__hljs-string___1SffY\">\"@string/app_name\"</span> &gt;</span>\n            <span class=\"highlight__hljs-tag___2Bb-l\">&lt;<span class=\"hljs-name\">intent-filter</span>&gt;</span>\n                <span class=\"highlight__hljs-tag___2Bb-l\">&lt;<span class=\"hljs-name\">action</span> <span class=\"hljs-attr\">android:name</span>=<span class=\"highlight__hljs-string___1SffY\">\"android.intent.action.MAIN\"</span> /&gt;</span>\n\n                <span class=\"highlight__hljs-tag___2Bb-l\">&lt;<span class=\"hljs-name\">category</span> <span class=\"hljs-attr\">android:name</span>=<span class=\"highlight__hljs-string___1SffY\">\"android.intent.category.LAUNCHER\"</span> /&gt;</span>\n            <span class=\"highlight__hljs-tag___2Bb-l\">&lt;/<span class=\"hljs-name\">intent-filter</span>&gt;</span>\n        <span class=\"highlight__hljs-tag___2Bb-l\">&lt;/<span class=\"hljs-name\">activity</span>&gt;</span>\n\n        <span class=\"highlight__hljs-tag___2Bb-l\">&lt;<span class=\"hljs-name\">service</span>\n            <span class=\"hljs-attr\">android:name</span>=<span class=\"highlight__hljs-string___1SffY\">\"com.octo.android.robospice.JacksonGoogleHttpClientSpiceService\"</span>\n            <span class=\"hljs-attr\">android:exported</span>=<span class=\"highlight__hljs-string___1SffY\">\"false\"</span> /&gt;</span>\n    <span class=\"highlight__hljs-tag___2Bb-l\">&lt;/<span class=\"hljs-name\">application</span>&gt;</span>\n\n<span class=\"highlight__hljs-tag___2Bb-l\">&lt;/<span class=\"hljs-name\">manifest</span>&gt;</span>\n</code></pre>\n<h2 id=\"fin\">Fin</h2>\n<p>Now we can run the app and see the result (success or failure) pop up as a Toast\nas well as viewing the actual data in LogCat.</p>\n<p>Check out the github repository\n<a href=\"https://github.com/ChristopherBiscardi/robospice-googlehttpclient-example\">here</a></p>\n","attributes":{"title":"Android RoboSpice with GoogleHttpClient","updatedAt":"Jan 27th, 2014","publishedAt":"Jan 27th, 2014","timeToRead":7,"headerImage":null,"url":"/2014/1/27/android-robospice-with-googlehttpclient/","canonicalURL":null,"excerpt":"In this post we will examine an example app in which we make a RoboSpice request\nusing GoogleHttpClient.","__typename":"BlogPostAttributes"},"__typename":"BlogPost"},"__typename":"Query"}}}
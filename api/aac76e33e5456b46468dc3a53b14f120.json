{"data":{"post":{"body":"<p>In this post we will go over how to set up the sample project for Robolectric, run, test and deploy to a device in a headless vagrant environment.</p>\n<h2>Sample App</h2>\n<p>Clone the sample app from the <a href=\"https://github.com/robolectric/RobolectricSample\">github repo</a></p>\n<p><code>git clone git@github.com:robolectric/RobolectricSample.git</code></p>\n<h2>Vagrantfile</h2>\n<p>Here is our Vagrantfile. We’ll need to add the <code>precise64</code> base box to our system. also availible as a <a href=\"https://gist.github.com/ChristopherBiscardi/9383725\">Gist</a></p>\n<p><code>&lt;code class=&quot;bash&quot; style=&quot;overflow-x:auto&quot;&gt;vagrant box add precise64 http://files.vagrantup.com/precise64.box</code></p>\n<pre><code>&lt;code class=<span class=\"hljs-string\">\"ruby\"</span> style=<span class=\"hljs-string\">\"overflow-x:auto\"</span>&gt;<span class=\"hljs-comment\"># -*- mode: ruby -*-</span>\n<span class=\"hljs-comment\"># vi: set ft=ruby :</span>\n\n<span class=\"hljs-comment\"># Vagrantfile API/syntax version. Don't touch unless you know what you're doing!</span>\nVAGRANTFILE_API_VERSION = <span class=\"hljs-string\">\"2\"</span>\n\nVagrant.configure(VAGRANTFILE_API_VERSION) <span class=\"hljs-keyword\">do</span> |config|\n  config.vm.box = <span class=\"hljs-string\">\"precise64\"</span>\n  config.vm.provision <span class=\"hljs-string\">\"shell\"</span>, <span class=\"hljs-symbol\">path:</span> <span class=\"hljs-string\">\"vagrant-android-build.sh\"</span>\n  config.vm.provider <span class=\"hljs-symbol\">:virtualbox</span> <span class=\"hljs-keyword\">do</span> |vb|\n    vb.customize [<span class=\"hljs-string\">'modifyvm'</span>, <span class=\"hljs-symbol\">:id</span>, <span class=\"hljs-string\">'--usb'</span>, <span class=\"hljs-string\">'on'</span>]\n    vb.customize [<span class=\"hljs-string\">'usbfilter'</span>, <span class=\"hljs-string\">'add'</span>, <span class=\"hljs-string\">'0'</span>, <span class=\"hljs-string\">'--target'</span>, <span class=\"hljs-symbol\">:id</span>, <span class=\"hljs-string\">'--name'</span>, <span class=\"hljs-string\">'1197123b'</span>, <span class=\"hljs-string\">'--vendorid'</span>, <span class=\"hljs-string\">'0x04e8'</span>]\n    vb.customize [<span class=\"hljs-string\">'usbfilter'</span>, <span class=\"hljs-string\">'add'</span>, <span class=\"hljs-string\">'0'</span>, <span class=\"hljs-string\">'--target'</span>, <span class=\"hljs-symbol\">:id</span>, <span class=\"hljs-string\">'--name'</span>, <span class=\"hljs-string\">'android'</span>, <span class=\"hljs-string\">'--vendorid'</span>, <span class=\"hljs-string\">'0x18d1'</span>]\n  <span class=\"hljs-keyword\">end</span>  \n<span class=\"hljs-keyword\">end</span>\n</code></pre>\n<p>and the Vagrant build script. The build script downloads and installs ADT and Maven.</p>\n<pre><code>&lt;code <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"bash\"</span> style=<span class=\"hljs-string\">\"overflow-x:auto\"</span>&gt;apt-get <span class=\"hljs-keyword\">update</span> -<span class=\"hljs-built_in\">y</span>\napt-get install openjdk-7-jdk unzip -<span class=\"hljs-built_in\">y</span>\n# <span class=\"hljs-keyword\">For</span> maven-<span class=\"hljs-keyword\">plugin</span>\napt-get install lib32z1-dev bison flex lib32ncurses5-dev libx11-dev gperf <span class=\"hljs-keyword\">g</span>++-multilib -<span class=\"hljs-built_in\">y</span>\n# Setup Android SDK\nsudo -<span class=\"hljs-keyword\">u</span> vagrant wget http:<span class=\"hljs-comment\">//dl.google.com/android/adt/adt-bundle-linux-x86_64-20131030.zip</span>\nsudo -<span class=\"hljs-keyword\">u</span> vagrant unzip adt-bundle-linux-x86_64-20131030.<span class=\"hljs-keyword\">zip</span>\n# Add Android SDK to PATH\nsudo -<span class=\"hljs-keyword\">u</span> vagrant echo export PATH=/home/vagrant/adt-bundle-linux-x86_64-20131030/sdk/tools:\\<span class=\"hljs-variable\">$PATH</span> &gt;&gt; /home/vagrant/.bashrc\nsudo -<span class=\"hljs-keyword\">u</span> vagrant echo export PATH=/home/vagrant/adt-bundle-linux-x86_64-20131030/sdk/platform-tools:\\<span class=\"hljs-variable\">$PATH</span> &gt;&gt; /home/vagrant/.bashrc\n\n# Maven\nsudo -<span class=\"hljs-keyword\">u</span> vagrant wget http:<span class=\"hljs-comment\">//download.nextag.com/apache/maven/maven-3/3.2.1/binaries/apache-maven-3.2.1-bin.tar.gz</span>\nsudo -<span class=\"hljs-keyword\">u</span> vagrant tar -xvzf apache-maven-3.2.1-bin.tar.gz\n# Add Maven to PATH\nsudo -<span class=\"hljs-keyword\">u</span> vagrant echo export PATH=/home/vagrant/apache-maven-3.2.1/bin:\\<span class=\"hljs-variable\">$PATH</span> &gt;&gt; /home/vagrant/.bashrc\n\n# Install API 16 (<span class=\"hljs-keyword\">sample</span> project needs it)\n# echo <span class=\"hljs-string\">\"y\"</span> is a hack to accept the license\nsudo -<span class=\"hljs-keyword\">u</span> vagrant echo <span class=\"hljs-string\">\"y\"</span> | /home/vagrant/adt-bundle-linux-x86_64-20131030/sdk/tools/android <span class=\"hljs-keyword\">update</span> sdk -t 6 --<span class=\"hljs-keyword\">no</span>-ui -<span class=\"hljs-built_in\">y</span>\n# ANDROID_HOME is <span class=\"hljs-keyword\">for</span> Maven\nsudo -<span class=\"hljs-keyword\">u</span> vagrant echo export ANDROID_HOME=/home/vagrant/adt-bundle-linux-x86_64-20131030/sdk/ &gt;&gt; /home/vagrant/.bashrc\n</code></pre>\n<h2>Path and ANDROID_HOME</h2>\n<p>We need a few thing on our path, all of which are included in our Vagrant build script (Android tools, Android platform-tools, Maven and ANDROID_HOME)</p>\n<pre><code><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">code</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"bash\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"overflow-x:auto\"</span>&gt;</span></span>export PATH=/home/vagrant/adt-bundle-linux-x86_64-20131030/sdk/tools:\\$PATH\nexport PATH=/home/vagrant/adt-bundle-linux-x86_64-20131030/sdk/platform-tools:\\$PATH\nexport PATH=/home/vagrant/apache-maven-3.2.1/bin:\\$PATH\nexport ANDROID<span class=\"hljs-emphasis\">_HOME=/home/vagrant/adt-bundle-linux-x86_</span>64-20131030/sdk/<span class=\"hljs-code\">```</span>\n\n\n<span class=\"hljs-section\">## Vagrant Up</span>\n\nSimply copy the <span class=\"hljs-code\">`Vagrantfile`</span> and <span class=\"hljs-code\">`vagrant-android-build.sh`</span> into the sample project’s root folder. Then <span class=\"hljs-code\">`cd`</span> into that folder and run <span class=\"hljs-code\">`vagrant up`</span> to boot the machine. If you don’t have Vagrant and VirtualBox, [<span class=\"hljs-string\">here</span>](<span class=\"hljs-link\">http://www.vagrantup.com/</span>) and [<span class=\"hljs-string\">here</span>](<span class=\"hljs-link\">https://www.virtualbox.org/</span>) are the respective links.\n\nNote that it may be necessary to run the command to update the Android SDK manually due to the licenses.\n\n</code></pre>\n<p><code class=\"bash\" style=\"overflow-x:auto\">vagrant ssh\nandroid update sdk -t 6 --no-ui -y```</p>\n<h2>Running the Tests</h2>\n<p>We can run the tests inside the vm using maven:</p>\n<pre><code>&lt;code <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"bash\"</span>&gt;vagrant ssh\n<span class=\"hljs-keyword\">cd</span> /vagrant\nmvn clean <span class=\"hljs-keyword\">test</span>```\n\n<span class=\"hljs-keyword\">Which</span> will give <span class=\"hljs-keyword\">us</span> output that looks like this:\n\n</code></pre>\n<p><code class=\"bash\" style=\"overflow-x:auto\">Results :</p>\n<p>Tests run: 87, Failures: 0, Errors: 0, Skipped: 0</p>\n<p>[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 28.917 s\n[INFO] Finished at: 2014-03-06T06:19:39+00:00\n[INFO] Final Memory: 23M/57M\n[INFO] ------------------------------------------------------------------------</p>\n<pre><code>\nRun `exit` <span class=\"hljs-built_in\">to</span> <span class=\"hljs-built_in\">get</span> out <span class=\"hljs-keyword\">of</span> <span class=\"hljs-keyword\">the</span> vm.\n\n\n<span class=\"hljs-comment\">## Connecting Test Devices to the VM</span>\n\nWith `VBoxManage` <span class=\"hljs-keyword\">and</span> devices connected, we can allow (all?) <span class=\"hljs-keyword\">of</span> them <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">the</span> following `usbfilter` <span class=\"hljs-keyword\">in</span> our `Vagrantfile`\n\n</code></pre>\n<p><code class=\"ruby\" style=\"overflow-x:auto\">config.vm.provider :virtualbox do |vb|\nvb.customize [‘modifyvm’, :id, ‘–usb’, ‘on’]\nvb.customize [‘usbfilter’, ‘add’, ‘0’, ‘–target’, :id, ‘–name’, ‘android’, ‘–vendorid’, ‘0x18d1’]\nend</p>\n<pre><code>\nAlternatively, we can <span class=\"hljs-built_in\">list</span> all connected usbhosts <span class=\"hljs-keyword\">and</span> select a specific device <span class=\"hljs-keyword\">as</span> such:\n\n`&lt;code <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">\"bash\"</span>&gt;VBoxManage <span class=\"hljs-built_in\">list</span> usbhost`\n\nWhich gives us a <span class=\"hljs-built_in\">list</span> <span class=\"hljs-keyword\">of</span> these:\n\n</code></pre>\n<p><code class=\"bash\">UUID:               6316e123-b702-4155-9703-c2015d014237\nVendorId:           0x18d1 (18D1)\nProductId:          0xd002 (D002)\nRevision:           2.40 (0240)\nPort:               6\nUSB version/speed:  0/2\nManufacturer:       asus\nProduct:            Nexus 7\nSerialNumber:       07d99c71\nAddress:            p=0xd002;v=0x18d1;s=0x000000006321cfbd;l=0x20260000\nCurrent State:      Busy```</p>\n<p>Find your Android device and use these parameters to change our Vagrantfile:</p>\n<p>SerialNumber -&gt; –name<br>\nVendorId -&gt; –vendorid</p>\n<pre><code>&lt;code class=<span class=\"hljs-string\">\"ruby\"</span> style=<span class=\"hljs-string\">\"overflow-x:auto\"</span>&gt;config.vm.provider <span class=\"hljs-symbol\">:virtualbox</span> <span class=\"hljs-keyword\">do</span> |vb|\n    vb.customize [<span class=\"hljs-string\">'modifyvm'</span>, <span class=\"hljs-symbol\">:id</span>, <span class=\"hljs-string\">'--usb'</span>, <span class=\"hljs-string\">'on'</span>]\n    vb.customize [<span class=\"hljs-string\">'usbfilter'</span>, <span class=\"hljs-string\">'add'</span>, <span class=\"hljs-string\">'0'</span>, <span class=\"hljs-string\">'--target'</span>, <span class=\"hljs-symbol\">:id</span>, <span class=\"hljs-string\">'--name'</span>, <span class=\"hljs-string\">'1197123b'</span>, <span class=\"hljs-string\">'--vendorid'</span>, <span class=\"hljs-string\">'0x04e8'</span>]\n  <span class=\"hljs-keyword\">end</span>\n</code></pre>\n<p>Remember to <code>vagrant reload</code> after changing network settings in the <code>Vagrantfile</code>. Some devices may also need to be unplugged and plugged back in for the VM to see them.</p>\n<h2>Deploying</h2>\n<p>Simply run adb inside the vm to see the connected devices:</p>\n<pre><code>&lt;code class=<span class=\"hljs-string\">\"bash\"</span>&gt;vagrant ssh\nsudo adb devices```\n\nIf you see <span class=\"hljs-keyword\">an</span> unauthorized message like <span class=\"hljs-keyword\">the</span> <span class=\"hljs-literal\">one</span> below, <span class=\"hljs-keyword\">it</span> is likely that you didn’t <span class=\"hljs-built_in\">start</span> <span class=\"hljs-keyword\">the</span> adb server <span class=\"hljs-keyword\">as</span> root (which will prevent <span class=\"hljs-keyword\">the</span> RSA authorization <span class=\"hljs-built_in\">from</span> popping up).\n\n</code></pre>\n<p>&lt;code bash=&quot;&quot; class=&quot;bash&gt;</p>\n<ul>\n<li>daemon not running. starting it now on port 5037 *</li>\n<li>daemon started successfully *\nList of devices attached\n???\tno permissions</pre><p>Otherwise we should see a list of devices as below after authorizing the devices when the RSA dialog pops up on each device.</p><pre>&lt;code class=&quot;&gt;List of devices attached\n07d99c71\tdevice\n2d605528\tdevice```</li>\n</ul>\n<p>We can now install the app on our devices from inside the vm using maven.</p>\n<pre><code>&lt;<span class=\"hljs-meta\">code</span> class=<span class=\"hljs-string\">\"bash\"</span>&gt;cd /vagrant\n<span class=\"hljs-keyword\">mvn </span>clean install &amp;&amp; <span class=\"hljs-keyword\">mvn </span><span class=\"hljs-keyword\">android:deploy```\n</span>\n\n## Fin\n\n<span class=\"hljs-symbol\">That</span>’s <span class=\"hljs-keyword\">it. </span>The app should <span class=\"hljs-keyword\">be </span>installed on your connected devices. <span class=\"hljs-keyword\">It </span>won’t start automatically, <span class=\"hljs-keyword\">but </span>you can navigate to the newly installed `Robolectric Sample` app <span class=\"hljs-keyword\">and </span>start <span class=\"hljs-keyword\">it </span>up.\n\n\n</code></pre>\n"}}}
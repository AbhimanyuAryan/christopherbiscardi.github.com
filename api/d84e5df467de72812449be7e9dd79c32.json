{"data":{"post":{"body":"<p>According to <a href=\"http://www.purescript.org/\" title=\"purescript.org\">PureScript.org</a></p>\n<blockquote>\n<p>PureScript is a small strongly, statically typed programming language with expressive types, written in and inspired by Haskell, and compiling to Javascript.</p>\n</blockquote>\n<p>It’s fairly easy to get started with the <a href=\"https://github.com/purescript-contrib/grunt-init-purescript\" title=\"grunt init purescript template\">grunt-init-purescript template</a></p>\n<h2>Dependencies</h2>\n<p>We will need <a href=\"http://gruntjs.com/\">grunt</a>,<a href=\"https://github.com/gruntjs/grunt-init\">grunt-init</a> and <a href=\"http://bower.io/\">bower</a> to work with this PureScript template. <a href=\"http://nodejs.org/\" title=\"nodejs\">Node</a> is also a dependency because of this.</p>\n<p><code>&lt;code class=&quot;bash&quot; style=&quot;overflow-x:auto&quot;&gt;npm install -g grunt grunt-init bower</code></p>\n<p>Then clone the template into a <code>.grunt-init</code> folder using git:</p>\n<pre><code>&lt;code class=<span class=\"hljs-string\">\"bash\"</span> style=<span class=\"hljs-string\">\"overflow-x:auto\"</span>&gt;mkdir ~/.grunt-init\ngit clone <span class=\"hljs-keyword\">https</span>://github.com/purescript-contrib/grunt-init-purescript.git ~/.grunt-init/purescript```\n\nWe also need <span class=\"hljs-keyword\">the</span> PureScript compiler, which we can grab <span class=\"hljs-keyword\">with</span> cabal:\n\n`&lt;code class=<span class=\"hljs-string\">\"bash\"</span> style=<span class=\"hljs-string\">\"overflow-x:auto\"</span>&gt;cabal install purescript`\n\n\n<span class=\"hljs-comment\">## Developing</span>\n\nWe can now install dependencies <span class=\"hljs-built_in\">from</span> npm <span class=\"hljs-keyword\">and</span> bower. There’s <span class=\"hljs-keyword\">a</span> decent amount <span class=\"hljs-built_in\">to</span> be excited about <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">the</span> output including `purescript-quickcheck`, `either` <span class=\"hljs-keyword\">and</span> `maybe` <span class=\"hljs-built_in\">to</span> name <span class=\"hljs-keyword\">a</span> few.\n\n</code></pre>\n<p><code class=\"bash\" style=\"overflow-x:auto\">npm install\nbower update```</p>\n<p>Then grunt when we want to build:</p>\n<p><code>&lt;code class=&quot;bash&quot; style=&quot;overflow-x:auto&quot;&gt;grunt</code></p>\n<h2>Testing</h2>\n<p>The template project is more of a library project, where the tests are what we want to run if we cloned the repo. As such, our <code>Main</code> module is in <code>tests/Test.purs</code> and can be run using:</p>\n<p><code>&lt;code class=&quot;bash&quot; style=&quot;overflow-x:auto&quot;&gt;node tmp/index.js</code></p>\n<p>after running <code>grunt</code> to build the project.</p>\n<p>To build an executable (a node.js scraper for example) we can make a few changes.</p>\n<h2>Modifications</h2>\n<p>First, we’ll make some changes to our test file.</p>\n<h4>Tests</h4>\n<p><code>&lt;code class=&quot;bash&quot; style=&quot;overflow-x:auto&quot;&gt;mv tests/Tests.purs tests/Test/Main.purs</code></p>\n<p>and change the module name from <code>Main</code> to <code>Test.Main</code>. Also change the <code>Starter.Kit.Example</code> import to <code>Starter.Kit.Main</code>.</p>\n<h4>JS</h4>\n<p>Place two simple js files in <code>js/</code></p>\n<h6>js/index.js</h6>\n<p><code>&lt;code class=&quot;bash&quot; style=&quot;overflow-x:auto&quot;&gt;require(&quot;Starter.Kit.Main&quot;).main();</code></p>\n<h6>js/test.js</h6>\n<p><code>&lt;code class=&quot;bash&quot; style=&quot;overflow-x:auto&quot;&gt;require(&quot;Test.Main&quot;).main();</code></p>\n<h4>Starter Kit</h4>\n<p>Now we will make a small modification to the Starter Kit file.</p>\n<p><code>&lt;code class=&quot;bash&quot; style=&quot;overflow-x:auto&quot;&gt;mv src/Starter/Kit/Example.purs src/Starter/Kit/Main.purs</code></p>\n<p>and rename the module to <code>Starter.Kit.Main</code>.</p>\n<h4>Gruntfile</h4>\n<p>Finally make some modifications to the Gruntfile and run <code>grunt</code></p>\n<pre><code>&lt;code <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"bash\"</span> style=<span class=\"hljs-string\">\"overflow-x:auto\"</span>&gt;<span class=\"hljs-built_in\">module</span>.exports = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">grunt</span>) </span>{\n<span class=\"hljs-meta\">\n  \"use strict\"</span>;\n\n  grunt.initConfig({ \n  \n    libFiles: [\n      <span class=\"hljs-string\">\"src/**/*.purs\"</span>,\n      <span class=\"hljs-string\">\"bower_components/purescript-*/src/**/*.purs\"</span>\n    ],\n    \n    clean: [<span class=\"hljs-string\">\"tmp\"</span>, <span class=\"hljs-string\">\"output\"</span>],\n  \n    pscMake: {\n      lib: {\n        src: [<span class=\"hljs-string\">\"\"</span>]\n      },\n      tests: {\n        src: [<span class=\"hljs-string\">\"tests/Test/Main.purs\"</span>, <span class=\"hljs-string\">\"\"</span>]\n      }\n    },\n\n    dotPsci: [<span class=\"hljs-string\">\"\"</span>],\n \n    copy: [\n      {\n        expand: <span class=\"hljs-literal\">true</span>,\n        cwd: <span class=\"hljs-string\">\"output\"</span>,\n        src: [<span class=\"hljs-string\">\"**\"</span>],\n        dest: <span class=\"hljs-string\">\"tmp/node_modules/\"</span>\n      }, {\n        expand: <span class=\"hljs-literal\">true</span>,\n        cwd: <span class=\"hljs-string\">\"js/\"</span>,\n        src: <span class=\"hljs-string\">'**'</span>,\n        dest: <span class=\"hljs-string\">\"tmp/\"</span>,\n        flatten: <span class=\"hljs-literal\">true</span>\n      }\n    ],\n\n    execute: {\n      tests: {\n        src: <span class=\"hljs-string\">\"tmp/test.js\"</span>\n      }\n    }      \n  });\n\n  grunt.loadNpmTasks(<span class=\"hljs-string\">\"grunt-contrib-copy\"</span>);\n  grunt.loadNpmTasks(<span class=\"hljs-string\">\"grunt-contrib-clean\"</span>);\n  grunt.loadNpmTasks(<span class=\"hljs-string\">\"grunt-execute\"</span>)\n  grunt.loadNpmTasks(<span class=\"hljs-string\">\"grunt-purescript\"</span>);\n \n  grunt.registerTask(<span class=\"hljs-string\">\"test\"</span>, [<span class=\"hljs-string\">\"pscMake:tests\"</span>, <span class=\"hljs-string\">\"copy\"</span>, <span class=\"hljs-string\">\"execute:tests\"</span>]);\n  grunt.registerTask(<span class=\"hljs-string\">\"make\"</span>, [<span class=\"hljs-string\">\"pscMake:lib\"</span>, <span class=\"hljs-string\">\"dotPsci\"</span>]);\n  grunt.registerTask(<span class=\"hljs-string\">\"default\"</span>, [<span class=\"hljs-string\">\"clean\"</span>, <span class=\"hljs-string\">\"make\"</span>, <span class=\"hljs-string\">\"test\"</span>]);\n};<span class=\"hljs-string\">``</span><span class=\"hljs-string\">`\n\n\n</span></code></pre>\n"}}}
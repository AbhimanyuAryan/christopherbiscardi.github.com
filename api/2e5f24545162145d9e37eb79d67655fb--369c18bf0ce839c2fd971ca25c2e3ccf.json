{"data":{"root":{"post":{"body":"<p>First Retrieve the Rebar Templates and put them in ~/.rebar/templates</p>\n<div><div class=\"syntaxhighlighter  bash\" id=\"highlighter_831319\"><div class=\"toolbar\"><span>[?](#)</span></div><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\"><tbody><tr><td class=\"gutter\"><div class=\"line number1 index0 alt2\">1</div><div class=\"line number2 index1 alt1\">2</div><div class=\"line number3 index2 alt2\">3</div></td><td class=\"code\"><div class=\"container\"><div class=\"line number1 index0 alt2\">`<code class=\"bash plain\"><a href=\"http://git-scm.com/book\">git</a><a href=\"http://git-scm.com/book/en/Git-Basics-Getting-a-Git-Repository\">clone</a><a href=\"https://github.com/rzezeski/rebar_riak_core\">git://github.com/rzezeski/rebar_riak_core.git</a>`</div><div class=\"line number2 index1 alt1\">`<code class=\"bash functions\"><a href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?mkdir\">mkdir</a>``<code class=\"bash plain\"><a href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?mkdir\">-p</a> ~/.rebar``<code class=\"bash plain\">/templates`</div><div class=\"line number3 index2 alt2\">`<code class=\"bash functions\"><a href=\"http://unixhelp.ed.ac.uk/CGI/man-cgi?cp\">cp</a>``<code class=\"bash plain\">rebar_riak_core/* ~/.rebar``<code class=\"bash plain\">/templates`</div></div></td></tr></tbody></table></div></div>You’ll also need [Rebar](https://github.com/basho/rebar) and [Erlang](). I used [homebrew](http://mxcl.github.com/homebrew/) to get them:\n<p>[bash]\nbrew install erlang rebar\n[/bash]</p>\n<p>Now that you’re set up, you can create a new multinode app from the templates.\nReplace myapp with whatever you want to call your new app in the following command:</p>\n<div><div class=\"syntaxhighlighter  bash\" id=\"highlighter_654785\"><div class=\"toolbar\"><span>[?](#)</span></div><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\"><tbody><tr><td class=\"gutter\"><div class=\"line number1 index0 alt2\">1</div><div class=\"line number2 index1 alt1\">2</div></td><td class=\"code\"><div class=\"container\"><div class=\"line number1 index0 alt2\">`<code class=\"bash functions\">cd``<code class=\"bash plain\">~``<code class=\"bash plain\">/where/I/want/my/app`</div><div class=\"line number2 index1 alt1\">`<code class=\"bash plain\"><a href=\"https://github.com/basho/rebar\">rebar create</a> template=riak_core_multinode appid=myapp nodeid=myapp`</div></div></td></tr></tbody></table></div></div>You can now `make` and run the code.\n [bash]\n make rel\n ./rel/myapp/bin/myapp console\n [/bash]\n<p>If all goes well you should be sitting in a console for your app.\nRun\n[erlang]\nmyapp:ping().\n[/erlang]\nto ping a random vnode.</p>\n<h5 id=\"links\">Links</h5>\n<ul>\n<li><a href=\"https://github.com/rzezeski/try-try-try/tree/master/2011/riak-core-first-multinode\">try try try</a>\nPost that goes into more detail about the process.</li>\n<li><a href=\"\">Ping</a>\nA Future Post detailing the <code>myapp:ping().</code> method.</li>\n</ul>\n","attributes":{"title":"Riak Core: Quickstart","updatedAt":"Jan 13th, 2013","publishedAt":"Jan 13th, 2013","timeToRead":1,"headerImage":null,"url":"/2013/1/13/riak-core-quickstart/","canonicalURL":null,"excerpt":"First Retrieve the Rebar Templates and put them in ~/.rebar/templates","__typename":"BlogPostAttributes"},"__typename":"BlogPost"},"__typename":"Query"}}}
{"data":{"root":{"post":{"body":"<p>I was writing a quick script today and came across a nice use case for .apply to\nmerge nested arrays into a single array. So I figured I’d share it.</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>    <span class=\"highlight__hljs-comment___UYk12\">//If we have nested arrays of depth = 1:</span>\n    <span class=\"highlight__hljs-keyword___som98\">var</span> arr = [[<span class=\"highlight__hljs-number___2gmaH\">1</span>,<span class=\"highlight__hljs-number___2gmaH\">2</span>,<span class=\"highlight__hljs-number___2gmaH\">3</span>],[<span class=\"highlight__hljs-number___2gmaH\">4</span>,<span class=\"highlight__hljs-number___2gmaH\">5</span>],<span class=\"highlight__hljs-number___2gmaH\">6</span>];\n    <span class=\"highlight__hljs-comment___UYk12\">//we can flatten it by using concat and apply</span>\n    <span class=\"highlight__hljs-keyword___som98\">var</span> flat_arr = [].concat.apply([],arr);\n    <span class=\"highlight__hljs-comment___UYk12\">//and check the value</span>\n    <span class=\"highlight__hljs-built_in___3uuyR\">console</span>.log(flat_arr);\n    <span class=\"highlight__hljs-comment___UYk12\">//logs [1,2,3,4,5,6]</span>\n</code></pre>\n<p>If you need a recursive (ie: infinitely nested) array flattened, check out the\nsource for Underscore’s <a href=\"http://underscorejs.org/#flatten\">flatten()</a> function,\nwhich uses concat.apply for shallow arrays.</p>\n","attributes":{"title":"Flattening Nested Arrays in JavaScript","updatedAt":"Jan 6th, 2014","publishedAt":"Jan 6th, 2014","timeToRead":1,"headerImage":null,"url":"/2014/1/5/flattening-nested-arrays-in-javascript/","canonicalURL":null,"excerpt":"I was writing a quick script today and came across a nice use case for .apply to\nmerge nested arrays into a single array. So I figured I’d…","__typename":"BlogPostAttributes"},"__typename":"BlogPost"},"__typename":"Query"}}}
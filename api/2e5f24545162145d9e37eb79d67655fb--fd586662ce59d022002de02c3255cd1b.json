{"data":{"root":{"post":{"body":"<p>In this post we will enable Drakma HTTP support in the Android/MOCL example\ncode. I have forked the repo <a href=\"https://github.com/ChristopherBiscardi/mocl-example-lisp-contacts-android\">on\nGithub</a>\nfor posterity. The first post is\n<a href=\"http://www.christopherbiscardi.com/2014/01/10/common-lisp-on-android-running-the-mocl-android-example/\">here</a>\nand it will get you set up with the Android/MOCL example without Drakma.</p>\n<p>First we must download dependencies.</p>\n<p><a href=\"http://weitz.de/drakma/#install\">Drakma</a>\n<a href=\"http://common-lisp.net/projects/usocket/releases/\">USocket</a>\n<a href=\"http://weitz.de/flexi-streams/\">Flexi-Streams</a>\n<a href=\"http://weitz.de/chunga/\">Chunga</a>\n<a href=\"http://www.cliki.net/cl-base64\">CL-BASE64</a>\n<a href=\"http://www.cliki.net/puri\">Puri</a></p>\n<p>My libs are located in mocl/systems. So I that’s where I place the folders of\ncode, then link the .asd files. The instructions may change slightly with\ndifferent versions of libs.</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code><span class=\"highlight__hljs-built_in___3uuyR\">cd</span> mocl/systems\nln <span class=\"hljs-_\">-s</span> drakma-1.3.7/drakma.asd drakma.asd\nln <span class=\"hljs-_\">-s</span> usocket-0.6.1/usocket.asd usocket.asd\ngit <span class=\"highlight__hljs-built_in___3uuyR\">clone</span> https://github.com/edicl/cl-ppcre.git\nln <span class=\"hljs-_\">-s</span> cl-ppcre/cl-ppcre.asd cl-ppcre.asd\n</code></pre>\n<p>Note that <code>cl-ppcre-unicode.asd</code> also exists. Also of note is the version of\n<code>trivial-gray-streams</code> in use here. As of this writing the current version is\ncausing issues and the version presented below should be used.</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>ln <span class=\"hljs-_\">-s</span> flexi-streams-1.0.12/flexi-streams.asd flexi-streams.asd\ngit <span class=\"highlight__hljs-built_in___3uuyR\">clone</span> https://git.gitorious.org/trivial-gray-streams/wukix-trivial-gray-streams.git\nln <span class=\"hljs-_\">-s</span> wukix-trivial-gray-streams/trivial-gray-streams.asd trivial-gray-streams.asd\nln <span class=\"hljs-_\">-s</span> chunga-1.1.5/chunga.asd chunga.asd\nln <span class=\"hljs-_\">-s</span> cl-base64-3.3.3/cl-base64.asd cl-base64.asd\nln <span class=\"hljs-_\">-s</span> puri-1.5.5/puri.asd puri.asd\n</code></pre>\n<p>So after doing the linking dance we can uncomment the Drakma code in app.lisp (5\nlines):</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>(<span class=\"hljs-name\">pushnew</span> <span class=\"highlight__hljs-symbol___mdaTG\">:drakma-no-ssl</span> *features*)\n   (<span class=\"hljs-name\">require</span> <span class=\"highlight__hljs-symbol___mdaTG\">:drakma</span>)\n</code></pre>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>(<span class=\"hljs-name\">declaim</span> (<span class=\"hljs-name\">call-in</span> net-test))\n(<span class=\"hljs-name\">defun</span> net-test ()\n  (<span class=\"hljs-name\">print</span> (<span class=\"hljs-name\">drakma</span><span class=\"highlight__hljs-symbol___mdaTG\">:http-request</span> <span class=\"highlight__hljs-string___1SffY\">\"http://wukix.com\"</span>)))\n</code></pre>\n<p>but we have to change out <code>http://wukix.com</code> because as of this writing wukix\nhas changed their site to redirect to https, and drakma can’t use ssl yet. In my\ncase I changed it to <code>http://www.cliki.net/</code> because it currently accepts over\nhttp.</p>\n<p>and add <code>net_test</code> to our <code>MainActivity.java</code>. In this case we just log out the\nresult</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>CL.cl_init();\n<span class=\"highlight__hljs-keyword___som98\">try</span> {\n    String dataDir = getDataDir();\n    CL.set_temp_dir(dataDir);\n    CL.set_doc_dir(dataDir);\n    CL.set_font_path(getAssetPath(<span class=\"highlight__hljs-string___1SffY\">\"DejaVuSans.ttf\"</span>));\n    CL.load_contacts();\n} <span class=\"highlight__hljs-keyword___som98\">catch</span> (Exception e) {\n    <span class=\"highlight__hljs-comment___UYk12\">// TODO Auto-generated catch block</span>\n    e.printStackTrace();\n}\n\nLog.e(<span class=\"highlight__hljs-string___1SffY\">\"CL\"</span>,CL.net_test());\n</code></pre>\n<p>and run:</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code><span class=\"highlight__hljs-built_in___3uuyR\">cd</span> mocl-example-lisp-contacts-android\nmocl --android LispContacts app.lisp\n<span class=\"highlight__hljs-built_in___3uuyR\">cd</span> LispContacts/jni\nndk-build\n</code></pre>\n<p>Then simply debug the project in ADK and watch the logcat output. The result\nshould show up as an error, since we used <code>Log.e(&quot;&quot;,&quot;&quot;)</code>, with a tag of CL.</p>\n<p><a href=\"http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611521/CBLogo_2014_transparent_swcmig.png\"><img src=\"http://res.cloudinary.com/diqzbm8lz/image/upload/h_300,w_300/v1428611521/CBLogo_2014_transparent_swcmig.png\" alt=\"CBLogo_2014_transparent\"></a></p>\n","attributes":{"title":"MOCL for Android Part 2: Drakma","updatedAt":"Jan 16th, 2014","publishedAt":"Jan 16th, 2014","timeToRead":1,"headerImage":null,"url":"/2014/1/16/mocl-for-android-part-2-drakma/","canonicalURL":null,"excerpt":"In this post we will enable Drakma HTTP support in the Android/MOCL example\ncode. I have forked the repo on\nGithub\nfor posterity. The first…","__typename":"BlogPostAttributes"},"__typename":"BlogPost"},"__typename":"Query"}}}
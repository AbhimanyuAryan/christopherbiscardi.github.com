{"data":{"post":{"body":"<p>I was writing a quick script today and came across a nice use case for .apply to merge nested arrays into a single array. So I figured I’d share it.</p>\n<pre><code>&lt;code <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"javascript\"</span>&gt;\n    <span class=\"hljs-comment\">//If we have nested arrays of depth = 1:</span>\n    <span class=\"hljs-keyword\">var</span> arr = [[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],[<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>],<span class=\"hljs-number\">6</span>];\n    <span class=\"hljs-comment\">//we can flatten it by using concat and apply</span>\n    <span class=\"hljs-keyword\">var</span> flat_arr = [].concat.apply([],arr);\n    <span class=\"hljs-comment\">//and check the value</span>\n    <span class=\"hljs-built_in\">console</span>.log(flat_arr);\n    <span class=\"hljs-comment\">//logs [1,2,3,4,5,6]</span>\n</code></pre>\n<p>If you need a recursive (ie: infinitely nested) array flattened, check out the source for Underscore’s <a href=\"http://underscorejs.org/#flatten\">flatten()</a> function, which uses concat.apply for shallow arrays.</p>\n"}}}
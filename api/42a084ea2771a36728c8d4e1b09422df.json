{"data":{"post":{"body":"<p>When placing a ViewPager inside of a GridView recently I ran into the issue of the ViewPager stealing the GridView Items’ click event. I had lost my click event, but the ViewPager was still scrolling fine.</p>\n<p>With the following GridView:</p>\n<pre><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">code</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"xml\"</span>&gt;</span><span class=\"hljs-meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">FrameLayout</span> \n    <span class=\"hljs-attr\">xmlns:android</span>=<span class=\"hljs-string\">\"http://schemas.android.com/apk/res/android\"</span>\n    <span class=\"hljs-attr\">android:layout_width</span>=<span class=\"hljs-string\">\"match_parent\"</span>\n    <span class=\"hljs-attr\">android:layout_height</span>=<span class=\"hljs-string\">\"match_parent\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">GridView</span>\n        <span class=\"hljs-attr\">android:id</span>=<span class=\"hljs-string\">\"@+id/bar_gridview\"</span>\n        <span class=\"hljs-attr\">android:layout_width</span>=<span class=\"hljs-string\">\"match_parent\"</span>\n        <span class=\"hljs-attr\">android:layout_height</span>=<span class=\"hljs-string\">\"match_parent\"</span>\n        <span class=\"hljs-attr\">android:verticalSpacing</span>=<span class=\"hljs-string\">\"0dp\"</span>\n        <span class=\"hljs-attr\">android:horizontalSpacing</span>=<span class=\"hljs-string\">\"0dp\"</span>\n        <span class=\"hljs-attr\">android:stretchMode</span>=<span class=\"hljs-string\">\"columnWidth\"</span>\n        <span class=\"hljs-attr\">android:numColumns</span>=<span class=\"hljs-string\">\"1\"</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">FrameLayout</span>&gt;</span>```\n\nand a grid item view with a ViewPager (reduced for simplicity):\n\n</code></pre>\n<p><code class=\"xml\">&lt;com.christopherbiscardi.grid.MyGridItemFrame xmlns:android=“<a href=\"http://schemas.android.com/apk/res/android\">http://schemas.android.com/apk/res/android</a>&quot;\nandroid:id=”@+id/grid_item_frame&quot;\nandroid:layout_width=&quot;match_parent&quot;\nandroid:layout_height=“match_parent” &gt;</p>\n<pre><code>&lt;com.christopherbiscardi.grid.MyViewPager\n    android:id=&quot;@+id/my_pager&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot; /&gt;\n</code></pre>\n<p>&lt;/com.christopherbiscardi.grid.MyGridItemFrame&gt;```</p>\n<p>We can intercept the touch event on MyGridItemFrame, which sits between the GridView and the ViewPager by extending <code>GestureDetector.SimpleOnGestureListener</code> and overriding <code>onInterceptTouchEvent</code>. In this case all we care about is handling the tap (<code>onSingleTapUp</code>) and we will let the scroll pass through to the ViewPager.</p>\n<pre><code>&lt;code <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"java\"</span> style=<span class=\"hljs-string\">\"overflow-x:auto\"</span>&gt;<span class=\"hljs-keyword\">package</span> com.christopherbiscardi.grid;\n\npublic <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyGridItemFrame</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">FrameLayout</span> </span>{\n\n\t<span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">GestureDetector</span> mGestureDetector = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-type\">GestureDetector</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-type\">MyGestureListener</span>());\n\n\t<span class=\"hljs-meta\">@Override</span>\n\tpublic boolean onInterceptTouchEvent(<span class=\"hljs-type\">MotionEvent</span> event) {\n\t\t<span class=\"hljs-keyword\">return</span> mGestureDetector.onTouchEvent(event);\n\t}\n\n\n\t<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyGestureListener</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">GestureDetector</span>.<span class=\"hljs-title\">SimpleOnGestureListener</span> </span>{\n\n\t\t<span class=\"hljs-meta\">@Override</span>\n\t\tpublic boolean onSingleTapUp(<span class=\"hljs-type\">MotionEvent</span> event) {\n\t\t\t<span class=\"hljs-type\">Toast</span>.makeText(getContext(), <span class=\"hljs-string\">\"clicked Grid Item\"</span>, <span class=\"hljs-type\">Toast</span>.<span class=\"hljs-type\">LENGTH_SHORT</span>).show();\n\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n\t\t}\n\t}\n}\n</code></pre>\n"}}}
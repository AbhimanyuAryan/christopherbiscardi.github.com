{"data":{"post":{"body":"<p>The <a href=\"http://www.christopherbiscardi.com/2014/12/21/docker-machine/\">previous post</a> explains how to get up and running with Docker machine. This one will be a quick tutorial on setting up a Minecraft server using Machine.</p>\n<ol>\n<li>Create a new Digital Ocean Machine. We need a <code>1gb</code> server due to Java’s requirements, so we’ll specify the 1gb DO variant: ```</li>\n</ol>\n<blockquote>\n<p>machine-docker create -d digitalocean --digitalocean-access-token=$DO_TOKEN --digitalocean-size=1gb biscarch-minecraft\nINFO[0000] Creating SSH key…\nINFO[0000] Creating Digital Ocean droplet…\nINFO[0003] Waiting for SSH…\nINFO[0155] “biscarch-minecraft” has been created and is now the active machine. To point Docker at this machine, run: export DOCKER_HOST=$(machine url) DOCKER_AUTH=identity</p>\n</blockquote>\n<pre><code><span class=\"hljs-number\">2</span>. Run the <span class=\"hljs-keyword\">command</span> suggested <span class=\"hljs-keyword\">to</span> activate the Digital Ocean machine. Remember that we re-named our binaries, <span class=\"hljs-keyword\">so</span> our <span class=\"hljs-keyword\">command</span> will look slightly differen<span class=\"hljs-variable\">t:</span> ```\nexport DOCKER_HOST=$(machine-docker url) DOCKER_AUTH=identity\n</code></pre>\n<ol start=\"3\">\n<li>After creating the machine, we can run a Minecraft server. Notice that we’ve accepted the EULA using an environment variable. ```</li>\n</ol>\n<blockquote>\n<p>machine-docker-1.3.1-dev-identity-auth run -itp 25565:25565 -e EULA=true itzg/minecraft-server\nThe authenticity of host “$ip:2376” can’t be established.\nRemote key ID XXXX\nAre you sure you want to continue connecting (yes/no)? yes\nUnable to find image ‘itzg/minecraft-server:latest’ locally\nPulling repository itzg/minecraft-server\ncf3280236048: Download complete\n511136ea3c5a: Download complete\n97fd97495e49: Download complete\n2dcbbf65536c: Download complete\n6a459d727ebb: Download complete\n8f321fc43180: Download complete\n03db2b23cf03: Download complete\n9cbaf023786c: Download complete\nc40e36cb3ec9: Download complete\n894f65ff66bd: Download complete\ne82301eb9615: Download complete\n1dbf91539513: Download complete\ne545342bf796: Download complete\n59bc57df4d1e: Download complete\n553afa5133d9: Download complete\n75c3ad818b79: Download complete\n0b0acc66bc64: Download complete\n978ce1e3b993: Download complete\n54fead2b8d41: Download complete\n2bb3b9314ae2: Download complete\naf46a2317b29: Download complete\n0b1b3214a72a: Download complete\nc68e5b97cc3f: Download complete\nf08ca66bb473: Download complete\n36a596d541f4: Download complete\n5c1156fb886b: Download complete\n59349c103e38: Download complete\n1d5073dd8949: Download complete\n250469004d09: Download complete\n78a77d27bdfa: Download complete\nStatus: Downloaded newer image for itzg/minecraft-server:latest\n–2014-12-27 06:06:21--  <a href=\"https://s3.amazonaws.com/Minecraft.Download/versions/versions.json\">https://s3.amazonaws.com/Minecraft.Download/versions/versions.json</a>\nResolving <a href=\"http://s3.amazonaws.com\">s3.amazonaws.com</a> (<a href=\"http://s3.amazonaws.com\">s3.amazonaws.com</a>)… 54.231.244.4\nConnecting to <a href=\"http://s3.amazonaws.com\">s3.amazonaws.com</a> (<a href=\"http://s3.amazonaws.com\">s3.amazonaws.com</a>)|54.231.244.4|:443… connected.\nHTTP request sent, awaiting response… 200 OK\nLength: 20681 (20K) [application/octet-stream]\nSaving to: ‘STDOUT’</p>\n</blockquote>\n<p>100%[====================================================================================&gt;] 20,681      --.-K/s   in 0.1s</p>\n<p>2014-12-27 06:06:22 (149 KB/s) - written to stdout [20681/20681]</p>\n<p>Downloading minecraft_server.1.8.1.jar …\n[06:06:33] [Server thread/INFO]: Starting minecraft server version 1.8.1\n[06:06:33] [Server thread/INFO]: Loading properties\n[06:06:33] [Server thread/INFO]: Default game type: SURVIVAL\n[06:06:33] [Server thread/INFO]: Generating keypair\n[06:06:33] [Server thread/INFO]: Starting Minecraft server on *:25565\n[06:06:33] [Server thread/INFO]: Using epoll channel type\n[06:06:34] [Server thread/WARN]: Failed to load user banlist:\njava.io.FileNotFoundException: banned-players.json (No such file or directory)\nat java.io.FileInputStream.open(Native Method) ~[?:1.7.0_65]\nat java.io.FileInputStream.<init>(FileInputStream.java:146) ~[?:1.7.0_65]\nat com.google.common.io.Files.newReader(Files.java:86) ~[minecraft_server.1.8.1.jar:?]\nat su.g(SourceFile:124) ~[minecraft_server.1.8.1.jar:?]\nat po.z(SourceFile:99) [minecraft_server.1.8.1.jar:?]\nat po.<init>(SourceFile:25) [minecraft_server.1.8.1.jar:?]\nat pp.i(SourceFile:172) [minecraft_server.1.8.1.jar:?]\nat net.minecraft.server.MinecraftServer.run(SourceFile:418) [minecraft_server.1.8.1.jar:?]\nat java.lang.Thread.run(Thread.java:745) [?:1.7.0_65]\n[06:06:34] [Server thread/WARN]: Failed to load ip banlist:\njava.io.FileNotFoundException: banned-ips.json (No such file or directory)\nat java.io.FileInputStream.open(Native Method) ~[?:1.7.0_65]\nat java.io.FileInputStream.<init>(FileInputStream.java:146) ~[?:1.7.0_65]\nat com.google.common.io.Files.newReader(Files.java:86) ~[minecraft_server.1.8.1.jar:?]\nat su.g(SourceFile:124) ~[minecraft_server.1.8.1.jar:?]\nat po.y(SourceFile:91) [minecraft_server.1.8.1.jar:?]\nat po.<init>(SourceFile:27) [minecraft_server.1.8.1.jar:?]\nat pp.i(SourceFile:172) [minecraft_server.1.8.1.jar:?]\nat net.minecraft.server.MinecraftServer.run(SourceFile:418) [minecraft_server.1.8.1.jar:?]\nat java.lang.Thread.run(Thread.java:745) [?:1.7.0_65]\n[06:06:34] [Server thread/WARN]: Failed to load operators list:\njava.io.FileNotFoundException: ops.json (No such file or directory)\nat java.io.FileInputStream.open(Native Method) ~[?:1.7.0_65]\nat java.io.FileInputStream.<init>(FileInputStream.java:146) ~[?:1.7.0_65]\nat com.google.common.io.Files.newReader(Files.java:86) ~[minecraft_server.1.8.1.jar:?]\nat su.g(SourceFile:124) ~[minecraft_server.1.8.1.jar:?]\nat po.A(SourceFile:107) [minecraft_server.1.8.1.jar:?]\nat po.<init>(SourceFile:29) [minecraft_server.1.8.1.jar:?]\nat pp.i(SourceFile:172) [minecraft_server.1.8.1.jar:?]\nat net.minecraft.server.MinecraftServer.run(SourceFile:418) [minecraft_server.1.8.1.jar:?]\nat java.lang.Thread.run(Thread.java:745) [?:1.7.0_65]\n[06:06:34] [Server thread/WARN]: Failed to load white-list:\njava.io.FileNotFoundException: whitelist.json (No such file or directory)\nat java.io.FileInputStream.open(Native Method) ~[?:1.7.0_65]\nat java.io.FileInputStream.<init>(FileInputStream.java:146) ~[?:1.7.0_65]\nat com.google.common.io.Files.newReader(Files.java:86) ~[minecraft_server.1.8.1.jar:?]\nat su.g(SourceFile:124) ~[minecraft_server.1.8.1.jar:?]\nat po.C(SourceFile:123) [minecraft_server.1.8.1.jar:?]\nat po.<init>(SourceFile:30) [minecraft_server.1.8.1.jar:?]\nat pp.i(SourceFile:172) [minecraft_server.1.8.1.jar:?]\nat net.minecraft.server.MinecraftServer.run(SourceFile:418) [minecraft_server.1.8.1.jar:?]\nat java.lang.Thread.run(Thread.java:745) [?:1.7.0_65]\n[06:06:34] [Server thread/INFO]: Preparing level “world”\n[06:06:34] [Server thread/INFO]: Preparing start region for level 0\n[06:06:35] [Server thread/INFO]: Preparing spawn area: 4%\n[06:06:36] [Server thread/INFO]: Preparing spawn area: 7%\n[06:06:37] [Server thread/INFO]: Preparing spawn area: 9%\n[06:06:38] [Server thread/INFO]: Preparing spawn area: 11%\n[06:06:39] [Server thread/INFO]: Preparing spawn area: 15%\n[06:06:40] [Server thread/INFO]: Preparing spawn area: 17%\n[06:06:41] [Server thread/INFO]: Preparing spawn area: 20%\n[06:06:42] [Server thread/INFO]: Preparing spawn area: 29%\n[06:06:43] [Server thread/INFO]: Preparing spawn area: 40%\n[06:06:44] [Server thread/INFO]: Preparing spawn area: 55%\n[06:06:46] [Server thread/INFO]: Preparing spawn area: 70%\n[06:06:47] [Server thread/INFO]: Preparing spawn area: 82%\n[06:06:48] [Server thread/INFO]: Preparing spawn area: 95%\n[06:06:48] [Server thread/INFO]: Done (14.248s)! For help, type “help” or “?”</p>\n<pre><code><span class=\"hljs-bullet\">4. </span>If we ignore the files that we didn’t create for things like the banned players list, that’s all we have to do to run the server! Launch Minecraft and select Multiplayer:  \n[<span class=\"hljs-string\">![Minecraft Multiplayer</span>](<span class=\"hljs-link\">http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611476/Screenshot-2014-12-27-00.41.05_xnigfr.png</span>)](<span class=\"hljs-link\">http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611476/Screenshot-2014-12-27-00.41.05_xnigfr.png</span>)\n<span class=\"hljs-bullet\">5. </span>Select “Add Server”  \n[<span class=\"hljs-string\">![Minecraft Add Server</span>](<span class=\"hljs-link\">http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611474/Screenshot-2014-12-27-00.43.07_mje3vg.png</span>)](<span class=\"hljs-link\">http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611474/Screenshot-2014-12-27-00.43.07_mje3vg.png</span>)\n<span class=\"hljs-bullet\">6. </span>Name it whatever you want. To get the server address, run <span class=\"hljs-code\">`machine-docker url`</span>. <span class=\"hljs-code\">```</span>\n<span class=\"hljs-quote\">&gt; machine-docker url</span>\ntcp://nnn.nnn.nn.nn:2376\n</code></pre>\n<p><a href=\"http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611474/Screenshot-2014-12-27-00.46.13_dna5kf.png\"><img src=\"http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611474/Screenshot-2014-12-27-00.46.13_dna5kf.png\" alt=\"Mining and Crafting!\"></a></p>\n<ol start=\"7\">\n<li>After clicking <code>done</code>, we should see our server:<br>\n<a href=\"http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611473/Screenshot-2014-12-27-00.48.40_oxnmuv.png\"><img src=\"http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611473/Screenshot-2014-12-27-00.48.40_oxnmuv.png\" alt=\"Available Server!\"></a></li>\n<li>After clicking play the server, we get a nice new world!<br>\n<a href=\"http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611472/Screenshot-2014-12-27-00.50.45_xcr7h9.png\"><img src=\"http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611472/Screenshot-2014-12-27-00.50.45_xcr7h9.png\" alt=\"A New World!\"></a></li>\n</ol>\n<h2>What’s next?</h2>\n<h3>Keeping the data around</h3>\n<p>Spawning servers is cool, but how do we keep the data around after the container is killed?</p>\n<ol>\n<li>Let’s take a look inside a running Minecraft container. ```</li>\n</ol>\n<blockquote>\n<p>machine-docker-1.3.1-dev-identity-auth ps\nCONTAINER ID        IMAGE                          COMMAND              CREATED              STATUS              PORTS                      NAMES\n94cf3f854fd8        itzg/minecraft-server:latest   “/start-minecraft”   About a minute ago   Up About a minute   0.0.0.0:25565-&gt;25565/tcp   sad_pare\nmachine-docker-1.3.1-dev-identity-auth exec -it 94c bash\nminecraft@94cf3f854fd8:/data$ ls\nbanned-ips.json  banned-players.json  eula.txt  logs  minecraft_server.1.8.1.jar  ops.json  server.properties  usercache.json  whitelist.json  world</p>\n</blockquote>\n<pre><code><span class=\"hljs-bullet\">2. </span><span class=\"hljs-code\">`kill`</span> the old server (we ran it using <span class=\"hljs-code\">`-it`</span> so <span class=\"hljs-code\">`Control-C`</span> should kill it. If you chose to run it with <span class=\"hljs-code\">`-d`</span>, just use <span class=\"hljs-code\">`machine-docker-1.3.1-dev-identity-auth ps`</span> and <span class=\"hljs-code\">`machine-docker-1.3.1-dev-identity-auth kill $container_id`</span>\n<span class=\"hljs-bullet\">3. </span>After killing the server, we will get kicked from the game:  \n[<span class=\"hljs-string\">![Screenshot 2014-12-27 00.55.45</span>](<span class=\"hljs-link\">http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611471/Screenshot-2014-12-27-00.55.45_hsjzmu.png</span>)](<span class=\"hljs-link\">http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611471/Screenshot-2014-12-27-00.55.45_hsjzmu.png</span>)\n<span class=\"hljs-bullet\">4. </span>We can see that there were quite a few files in the /data directory. We’re going to mount a volume there using <span class=\"hljs-code\">`/opt/craft`</span> on the host. Notice that we’ve also set the Message of the Day (MOTD). <span class=\"hljs-code\">```</span>\nmachine-docker-1.3.1-dev-identity-auth run -dp 25565:25565 -e EULA=true -e 'MOTD=Crafty Crafting!' -v /opt/craft:/data itzg/minecraft-server\n</code></pre>\n<ol start=\"5\">\n<li>Let’s ssh in to the Digital Ocean host and see if we have any files: ```</li>\n</ol>\n<blockquote>\n<p>machine-docker ssh\nroot@docker:~# ls /opt/craft/\nbanned-ips.json  banned-players.json  eula.txt  logs  minecraft_server.1.8.1.jar  ops.json  server.properties  usercache.json  whitelist.json  world</p>\n</blockquote>\n<pre><code><span class=\"hljs-number\">6.</span> Voila! We have <span class=\"hljs-keyword\">a</span> bunch <span class=\"hljs-keyword\">of</span> <span class=\"hljs-built_in\">files</span>. Now we reconnect <span class=\"hljs-built_in\">to</span> <span class=\"hljs-keyword\">the</span> server (<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">the</span> Minecraft app) <span class=\"hljs-keyword\">and</span> spend some <span class=\"hljs-built_in\">time</span> doing something (say, chopping down <span class=\"hljs-keyword\">a</span> tree). After that, <span class=\"hljs-built_in\">kill</span> <span class=\"hljs-keyword\">the</span> server <span class=\"hljs-keyword\">as</span> <span class=\"hljs-keyword\">before</span>. The <span class=\"hljs-built_in\">files</span> will stay <span class=\"hljs-keyword\">on</span> <span class=\"hljs-title\">the</span> <span class=\"hljs-title\">Digital</span> <span class=\"hljs-title\">Ocean</span> <span class=\"hljs-title\">machine</span>, <span class=\"hljs-title\">so</span> <span class=\"hljs-title\">we</span> <span class=\"hljs-title\">can</span> <span class=\"hljs-title\">just</span> <span class=\"hljs-title\">restart</span> <span class=\"hljs-title\">the</span> <span class=\"hljs-title\">server</span> <span class=\"hljs-title\">using</span> <span class=\"hljs-title\">the</span> <span class=\"hljs-title\">same</span> <span class=\"hljs-title\">volume</span> <span class=\"hljs-title\">mount</span>: ```\nmachine-docker<span class=\"hljs-number\">-1.3</span><span class=\"hljs-number\">.1</span>-dev-identity-auth run -dp <span class=\"hljs-number\">25565</span>:<span class=\"hljs-number\">25565</span> -e EULA=<span class=\"hljs-literal\">true</span> -e <span class=\"hljs-string\">'MOTD=Crafty Crafting!'</span> -v /opt/craft:/data itzg/minecraft-server\n</code></pre>\n<ol start=\"7\">\n<li>And look at that, we’ve still cutting down our tree! The server was saved!<br>\n<a href=\"http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611468/Screenshot-2014-12-27-01.21.57_ldyqeq.png\"><img src=\"http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611468/Screenshot-2014-12-27-01.21.57_ldyqeq.png\" alt=\"Chopping Wood\"></a></li>\n</ol>\n<h3>A new Seed:</h3>\n<p>Let’s check out a new seed using the configuration files.</p>\n<ol>\n<li>Now we’ll re-run our server with a level seed. It should be added to <code>/opt/craft/server.properties</code> and we can do that through ssh and vi: ```</li>\n</ol>\n<blockquote>\n<p>machine-docker ssh biscarch/minecraft\nroot@docker:~# vi /opt/craft/server.properties</p>\n</blockquote>\n<pre><code><span class=\"hljs-number\">2</span>. server.properties looks something like this (we’ve just changed the `level-seed`) ```\nroot@docker:~<span class=\"hljs-comment\"># cat /opt/craft/server.properties</span>\n<span class=\"hljs-comment\">#Minecraft server properties</span>\n<span class=\"hljs-comment\">#Sat Dec 27 10:00:14 UTC 2014</span>\n<span class=\"hljs-attr\">spawn-protection=16</span>\n<span class=\"hljs-attr\">max-tick-time=60000</span>\n<span class=\"hljs-attr\">generator-settings=</span>\n<span class=\"hljs-attr\">force-gamemode=false</span>\n<span class=\"hljs-attr\">allow-nether=true</span>\n<span class=\"hljs-attr\">gamemode=0</span>\n<span class=\"hljs-attr\">enable-query=false</span>\n<span class=\"hljs-attr\">player-idle-timeout=0</span>\n<span class=\"hljs-attr\">difficulty=1</span>\n<span class=\"hljs-attr\">spawn-monsters=true</span>\n<span class=\"hljs-attr\">op-permission-level=4</span>\n<span class=\"hljs-attr\">resource-pack-hash=</span>\n<span class=\"hljs-attr\">announce-player-achievements=true</span>\n<span class=\"hljs-attr\">pvp=true</span>\n<span class=\"hljs-attr\">snooper-enabled=true</span>\n<span class=\"hljs-attr\">level-type=DEFAULT</span>\n<span class=\"hljs-attr\">hardcore=false</span>\n<span class=\"hljs-attr\">enable-command-block=false</span>\n<span class=\"hljs-attr\">max-players=20</span>\n<span class=\"hljs-attr\">network-compression-threshold=256</span>\n<span class=\"hljs-attr\">max-world-size=29999984</span>\n<span class=\"hljs-attr\">server-port=25565</span>\n<span class=\"hljs-attr\">texture-pack=</span>\n<span class=\"hljs-attr\">server-ip=</span>\n<span class=\"hljs-attr\">spawn-npcs=true</span>\n<span class=\"hljs-attr\">allow-flight=false</span>\n<span class=\"hljs-attr\">level-name=world</span>\n<span class=\"hljs-attr\">view-distance=10</span>\n<span class=\"hljs-attr\">resource-pack=</span>\n<span class=\"hljs-attr\">spawn-animals=true</span>\n<span class=\"hljs-attr\">white-list=false</span>\n<span class=\"hljs-attr\">generate-structures=true</span>\n<span class=\"hljs-attr\">online-mode=true</span>\n<span class=\"hljs-attr\">max-build-height=256</span>\n<span class=\"hljs-attr\">level-seed=1785852800490497919</span>\n<span class=\"hljs-attr\">use-native-transport=true</span>\n<span class=\"hljs-attr\">enable-rcon=false</span>\n<span class=\"hljs-attr\">motd=Crafty</span> Crafting!\n</code></pre>\n<ol start=\"3\">\n<li>Now we should be able to blow away <code>/opt/craft/world</code> (if it exists in the container) and our world will get rebuilt: ```\nrm -rf /opt/craft/world</li>\n</ol>\n<pre><code><span class=\"hljs-number\">4.</span> <span class=\"hljs-built_in\">run</span> the server <span class=\"hljs-keyword\">with</span> the volume attached: ```\nmachine-docker<span class=\"hljs-number\">-1.3</span><span class=\"hljs-number\">.1</span>-dev-identity-auth <span class=\"hljs-built_in\">run</span> -dp <span class=\"hljs-number\">25565</span>:<span class=\"hljs-number\">25565</span> -e EULA=<span class=\"hljs-literal\">true</span> -e <span class=\"hljs-string\">'MOTD=Crafty Crafting!'</span> -v /<span class=\"hljs-built_in\">opt</span>/craft:/data itzg/minecraft-server\n</code></pre>\n<ol start=\"5\">\n<li>After starting the server with the new seed, just play the server as before (it should still be listed).<br>\n<a href=\"http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611470/Screenshot-2014-12-27-01.01.20_moh5jl.png\"><img src=\"http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611470/Screenshot-2014-12-27-01.01.20_moh5jl.png\" alt=\"Screenshot 2014-12-27 01.01.20\"></a><br>\nTurn around and you should see:<br>\n<a href=\"http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611466/Screenshot-2014-12-27-02.00.51_disq4c.png\"><img src=\"http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611466/Screenshot-2014-12-27-02.00.51_disq4c.png\" alt=\"Screenshot 2014-12-27 02.00.51\"></a></li>\n</ol>\n<h1>Fin</h1>\n<p>We can use docker machine to ssh into the server and edit <code>/opt/craft/server.properties</code>, which holds <a href=\"http://minecraft.gamepedia.com/Server.properties\">a bunch of data</a> we may want to edit. Then just restart the container <img src=\"http://www.christopherbiscardi.com/wp-includes/images/smilies/simple-smile.png\" alt=\":)\"></p>\n<p>Happy Crafting!</p>\n"}}}
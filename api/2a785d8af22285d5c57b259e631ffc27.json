{"data":{"post":{"body":"<p>In this post we are going to add a ListFragment backed by the RoboSpice data from the <a href=\"http://www.christopherbiscardi.com/2014/01/27/android-robospice-with-googlehttpclient/\">first post</a></p>\n<p>The git repo is <a href=\"https://github.com/ChristopherBiscardi/robospice-googlehttpclient-example/tree/8f64ab7d761d095737811018624b0da31b6e4b7b\">here</a>.</p>\n<p>Firstly, we are going to need to bump the sdk version to 11 in <code>AndroidManifest.xml</code>. We could use the support version of the Fragment api, but in this instance we don’t need to.</p>\n<pre><code>&lt;<span class=\"hljs-selector-tag\">code</span> class=<span class=\"hljs-string\">\"xml\"</span>&gt;&lt;uses-sdk\n        android:minSdkVersion=<span class=\"hljs-string\">\"11\"</span>\n        android:targetSdkVersion=<span class=\"hljs-string\">\"17\"</span> /&gt;```\n\nThen we’ll create <span class=\"hljs-selector-tag\">a</span> RedditListFragment by extending ListFragment:\n\n</code></pre>\n<p><code class=\"java\" style=\"overflow-x:scroll\">public class RedditListFragment extends ListFragment {</p>\n<pre><code>@Override\npublic void onListItemClick(ListView l, View v, int position, long id) {\n    Log.e(&quot;RedditListingsClick&quot;,position + &quot; &quot; + id);\n}\n\n@Override\npublic View onCreateView(LayoutInflater inflater, ViewGroup container,\n        Bundle savedInstanceState) {\n    ArrayList&lt;redditchild&gt; redditChildren = new ArrayList&lt;redditchild&gt;();\n    RedditChildAdapter adapter = new RedditChildAdapter(inflater.getContext(), redditChildren);\n    setListAdapter(adapter);\n    return super.onCreateView(inflater, container, savedInstanceState);\n}\n</code></pre>\n<p>}</redditchild></redditchild>```</p>\n<p>Notably, we have it set to log out the position of taps to LogCat and we set a new adapter (with empty content) for the ListView.</p>\n<h4>item_reddit_listing.xml</h4>\n<p>We also need an item layout to display our data. We use a simple <code>LinearLayout</code> with vertical alignment and some sensible margins to arrange our three <code>TextView</code>s. We set some stylistic effects (color, bold/italics) on our <code>TextView</code>s to make the display a little nicer.</p>\n<p>Of note is the <code>android:id</code> fields. We will use these in our adapter to identify each <code>TextView</code>.</p>\n<pre><code>&lt;code class=<span class=\"hljs-string\">\"xml\"</span>&gt;&lt;LinearLayout xmlns:android=<span class=\"hljs-string\">\"http://schemas.android.com/apk/res/android\"</span>\n    android:layout_width=<span class=\"hljs-string\">\"fill_parent\"</span>\n    android:layout_height=<span class=\"hljs-string\">\"fill_parent\"</span>\n    android:background=<span class=\"hljs-string\">\"#EDEDED\"</span>\n    android:orientation=<span class=\"hljs-string\">\"vertical\"</span>\n    android:paddingBottom=<span class=\"hljs-string\">\"10dp\"</span>\n    android:paddingLeft=<span class=\"hljs-string\">\"20dp\"</span>\n    android:paddingRight=<span class=\"hljs-string\">\"20dp\"</span>\n    android:paddingTop=<span class=\"hljs-string\">\"10dp\"</span> &gt;\n\n    &lt;TextView\n        android:id=<span class=\"hljs-string\">\"@+id/rTitle\"</span>\n        android:layout_width=<span class=\"hljs-string\">\"wrap_content\"</span>\n        android:layout_height=<span class=\"hljs-string\">\"wrap_content\"</span>\n        android:textColor=<span class=\"hljs-string\">\"#454545\"</span>\n        android:textStyle=<span class=\"hljs-string\">\"bold\"</span> /&gt;\n\n    &lt;TextView\n        android:id=<span class=\"hljs-string\">\"@+id/rAuthor\"</span>\n        android:layout_width=<span class=\"hljs-string\">\"wrap_content\"</span>\n        android:layout_height=<span class=\"hljs-string\">\"wrap_content\"</span>\n        android:textColor=<span class=\"hljs-string\">\"#acacac\"</span>\n        android:textStyle=<span class=\"hljs-string\">\"italic\"</span> /&gt;\n\n    &lt;TextView\n        android:id=<span class=\"hljs-string\">\"@+id/rDomain\"</span>\n        android:layout_width=<span class=\"hljs-string\">\"wrap_content\"</span>\n        android:layout_height=<span class=\"hljs-string\">\"wrap_content\"</span>\n        android:textColor=<span class=\"hljs-string\">\"#acacac\"</span> /&gt;\n\n&lt;/LinearLayout&gt;```\n\n<span class=\"hljs-comment\">#### RedditChildAdapter</span>\n\nNext we need <span class=\"hljs-built_in\">to</span> extend <span class=\"hljs-keyword\">an</span> adapter <span class=\"hljs-built_in\">to</span> map <span class=\"hljs-keyword\">the</span> data we <span class=\"hljs-built_in\">get</span> <span class=\"hljs-built_in\">from</span> RoboSpice <span class=\"hljs-built_in\">to</span> <span class=\"hljs-keyword\">the</span> `item_reddit_listing.xml` layout.\n\nNotably, we are <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">the</span> ViewHolder pattern <span class=\"hljs-keyword\">for</span> performance <span class=\"hljs-keyword\">and</span> <span class=\"hljs-keyword\">using</span> `child.getData()` <span class=\"hljs-built_in\">to</span> <span class=\"hljs-built_in\">get</span> <span class=\"hljs-keyword\">at</span> <span class=\"hljs-keyword\">each</span> `RedditListing`.\n\n</code></pre>\n<p><code class=\"java\" style=\"overflow-x:scroll\">package com.christopherbiscardi.robospicetest.lists;</p>\n<p>import java.util.ArrayList;</p>\n<p>import com.christopherbiscardi.robospicetest.R;\nimport com.christopherbiscardi.robospicetest.RedditChild;</p>\n<p>import android.content.Context;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ArrayAdapter;\nimport android.widget.TextView;</p>\n<p>public class RedditChildAdapter extends ArrayAdapter<redditchild> {\nprivate static class ViewHolder {\nTextView title;\nTextView author;\nTextView domain;\n}</p>\n<pre><code>public RedditChildAdapter(Context context, ArrayList&lt;redditchild&gt; redditChildren) {\n    super(context, R.layout.item_reddit_listing, redditChildren);\n}\n\n@Override\npublic View getView(int position, View convertView, ViewGroup parent) {\n    // Get the data item for this position\n    RedditChild child = getItem(position);    \n    // Check if an existing view is being reused, otherwise inflate the view\n       ViewHolder viewHolder; // view lookup cache stored in tag\n       if (convertView == null) {\n          viewHolder = new ViewHolder();\n          LayoutInflater inflater = LayoutInflater.from(getContext());\n          convertView = inflater.inflate(R.layout.item_reddit_listing, null);\n          viewHolder.title = (TextView) convertView.findViewById(R.id.rTitle);\n          viewHolder.author = (TextView) convertView.findViewById(R.id.rAuthor);\n          viewHolder.domain = (TextView) convertView.findViewById(R.id.rDomain);\n          convertView.setTag(viewHolder);\n       } else {\n           viewHolder = (ViewHolder) convertView.getTag();\n       }\n       // Populate the data into the template view using the data object\n       viewHolder.title.setText(child.getData().getTitle());\n       viewHolder.author.setText(child.getData().getAuthor());\n       viewHolder.domain.setText(child.getData().getDomain());\n       // Return the completed view to render on screen\n       return convertView;\n}\n</code></pre>\n<p>}\n</redditchild></redditchild>```</p>\n<h4>MainActivity.java</h4>\n<p>Finally, in <code>MainActivity.java</code>:</p>\n<p>Add a RedditListFragment to the view using FragmentManager:</p>\n<pre><code>&lt;code <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"java\"</span> style=<span class=\"hljs-string\">\"overflow-x:scroll\"</span>&gt;<span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">onCreate</span>(<span class=\"hljs-params\">Bundle savedInstanceState</span>) </span>{\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n    \n    FragmentManager fm = getFragmentManager();\n\n    <span class=\"hljs-keyword\">if</span> (fm.findFragmentById(android.R.id.content) == <span class=\"hljs-keyword\">null</span>) {\n        RedditListFragment list = <span class=\"hljs-keyword\">new</span> RedditListFragment();\n        fm.beginTransaction().add(android.R.id.content, list).commit();\n    }\n    spiceRequestReddit = <span class=\"hljs-keyword\">new</span> SpiceRequestReddit( <span class=\"hljs-string\">\"Riak\"</span> );\n}```\n\nThen <span class=\"hljs-keyword\">in</span> our Request Listener add the data to the ListFragment Adapter:\n\n</code></pre>\n<p><code class=\"java\" style=\"overflow-x:scroll\">public void onRequestSuccess( final Reddit result ) {\nToast.makeText( MainActivity.this, “success”, Toast.LENGTH_SHORT ).show();\nLog.e(“TEST”,result.toString());\nLog.e(“TEST”,result.getData().getChildren().get(0).getData().getTitle());</p>\n<pre><code>ListView listView = (ListView) findViewById(android.R.id.list);\nRedditChildAdapter adapter = (RedditChildAdapter) listView.getAdapter();\nadapter.clear();\nadapter.addAll(result.getData().getChildren());\n</code></pre>\n<p>}```</p>\n<p>At this point we’re good to go. Fire up the app and you should see something similar to this:</p>\n<figure class=\"wp-caption aligncenter\" id=\"attachment_448\" style=\"width: 187px;\">[![Screenshot of the sample Reddit app](http://res.cloudinary.com/diqzbm8lz/image/upload/h_300,w_188/v1428611518/Screenshot_2014-01-27-16-44-50_njyscb.png)](http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611518/Screenshot_2014-01-27-16-44-50_njyscb.png)<figcaption class=\"wp-caption-text\">Screenshot of the sample Reddit app</figcaption></figure>\n"}}}
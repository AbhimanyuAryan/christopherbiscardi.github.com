{"data":{"post":{"body":"<p>If you want to deploy a Clojure/Compojure application you’re going to need a couple hints.</p>\n<p>First, in project.clj you’re going to need to add an item to :dependencies and :main.</p>\n<p>I have some extra dependencies such as hiccup that aren’t strictly necessary. The ring/ring-jetty-adapter is most important.</p>\n<p>under :main write the name of the module that has your (defroutes), we’re going to add a -main function to the same file.</p>\n<pre><code>&lt;code class=<span class=\"hljs-string\">\"clojure\"</span>&gt;\n:dependencies [[org.clojure/clojure <span class=\"hljs-string\">\"1.4.0\"</span>]\n              [compojure <span class=\"hljs-string\">\"1.1.5\"</span>]\n              [ring/ring-jetty-adapter <span class=\"hljs-string\">\"1.2.0-beta1\"</span>]\n              [hiccup <span class=\"hljs-string\">\"1.0.2\"</span>]]\n:main projectname.handler\n</code></pre>\n<p>Now in projectname.handler add :gen-class and ring.adapter.jetty to (use).</p>\n<p>Lower in the same file, include a new function called -main.<br>\nThis is the function java will call to start the server.</p>\n<p>In this case my defroutes was named app-routes so that’s what goes after run-jetty.</p>\n<pre><code>&lt;code class=<span class=\"hljs-string\">\"clojure\"</span>&gt;\n(<span class=\"hljs-name\">ns</span> projectname.handler\n (<span class=\"hljs-symbol\">:gen-class</span>)\n (<span class=\"hljs-symbol\">:use</span> [compojure.core]\n       [ring.adapter.jetty]\n       [hiccup.core]))\n\n(<span class=\"hljs-name\">defroutes</span> app-routes\n           (<span class=\"hljs-name\">GET</span> <span class=\"hljs-string\">\"/\"</span> [] g/show-home)\n           (<span class=\"hljs-name\">route/resources</span> <span class=\"hljs-string\">\"/\"</span>)\n           (<span class=\"hljs-name\">route/not-found</span> <span class=\"hljs-string\">\"Not Found\"</span>))\n\n(<span class=\"hljs-name\">defn</span> -main [&amp; args]\n (<span class=\"hljs-name\">run-jetty</span> (<span class=\"hljs-name\">handler/site</span> app-routes) {<span class=\"hljs-symbol\">:port</span> <span class=\"hljs-number\">5000</span>}))\n</code></pre>\n<p>That’s it. You should be able to</p>\n<pre><code>&lt;<span class=\"hljs-selector-tag\">code</span> class=<span class=\"hljs-string\">\"bash\"</span>&gt;\nlein compile\nlein uberjar\njava -jar target/whatever-STANDALONE<span class=\"hljs-selector-class\">.jar</span>\n</code></pre>\n"}}}
{"data":{"post":{"body":"<p><a href=\"http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611482/snap_sks60m.png\"><img src=\"http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611482/snap_sks60m.png\" alt=\"snap-framework\"></a></p>\n<p>Snap 1.0 isn’t on Hackage yet, but here’s how you can play with it now.</p>\n<p>NOTE: This was written using ghc-7.8.3. The repo is <a href=\"https://github.com/ChristopherBiscardi/snap-micro-services\">on GitHub</a></p>\n<p>First we’ll make a new directory for the project and one for the dependencies, then clone the dependencies for 1.0 that aren’t on Hackage:</p>\n<pre><code>&lt;<span class=\"hljs-selector-tag\">code</span> class=<span class=\"hljs-string\">\"bash\"</span> style=<span class=\"hljs-string\">\"overflow-x:auto\"</span>&gt;mkdir auth_server\ncd auth_server\nmkdir deps\ngit clone git@github<span class=\"hljs-selector-class\">.com</span>:snapframework/io-streams-haproxy<span class=\"hljs-selector-class\">.git</span> deps/io-streams-haproxy\ngit clone git@github<span class=\"hljs-selector-class\">.com</span>:snapframework/snap<span class=\"hljs-selector-class\">.git</span> deps/snap\ngit clone git@github<span class=\"hljs-selector-class\">.com</span>:snapframework/snap-core<span class=\"hljs-selector-class\">.git</span> deps/snap-core\ngit clone git@github<span class=\"hljs-selector-class\">.com</span>:snapframework/snap-server<span class=\"hljs-selector-class\">.git</span> deps/snap-server\ngit clone git@github<span class=\"hljs-selector-class\">.com</span>:snapframework/snap-loader-static<span class=\"hljs-selector-class\">.git</span> deps/snap-loader-static\ngit clone git@github<span class=\"hljs-selector-class\">.com</span>:snapframework/heist<span class=\"hljs-selector-class\">.git</span> deps/heist\ngit clone git@github<span class=\"hljs-selector-class\">.com</span>:snapframework/snap-templates<span class=\"hljs-selector-class\">.git</span> deps/snap-templates\n</code></pre>\n<p>We should have a file structure that looks like this:</p>\n<ul>\n<li>auth_server/ - deps/ - io-streams-haproxy/</li>\n<li>snap/</li>\n<li>snap-core/</li>\n<li>snap-server/</li>\n<li>snap-loader-static/</li>\n<li>heist/</li>\n</ul>\n<p>We can now get a scaffolded app using <code>snap-templates</code>.</p>\n<pre><code>&lt;<span class=\"hljs-meta\">code</span> class=<span class=\"hljs-string\">\"bash\"</span>&gt;cd auth_server/deps/snap-templates\n<span class=\"hljs-symbol\">cabal</span> <span class=\"hljs-keyword\">build\n</span></code></pre>\n<p>Building <code>snap-templates</code> gives us the <code>snap</code> executable that we used to use from the <code>snap</code> project. In the project root, let’s init a new scaffold:</p>\n<pre><code>&lt;code <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"bash\"</span>&gt;cd auth_server\n.<span class=\"hljs-regexp\">/deps/</span>snap-templates<span class=\"hljs-regexp\">/dist/</span>build<span class=\"hljs-regexp\">/snap/</span>snap init\n</code></pre>\n<p>Which leaves us with this structure at the top level:</p>\n<ul>\n<li>auth_server/ - auth-server.cabal</li>\n<li>deps/</li>\n<li>snaplets/</li>\n<li>src/</li>\n<li>static/</li>\n</ul>\n<p>If you haven’t created a new sandbox for this project, do that now and install the dependencies for the scaffold into the sandbox.</p>\n<pre><code>&lt;code class=<span class=\"hljs-string\">\"bash\"</span>&gt;<span class=\"hljs-keyword\">cd</span> auth_server\ncabal <span class=\"hljs-keyword\">sandbox</span> init\ncabal install --<span class=\"hljs-keyword\">only</span>-dependencies\n</code></pre>\n<p>We can’t build the app yet, since the scaffold is missing two things. We need to add <code>map-syntax</code> as a dependency to <code>auth-server.cabal</code> and we need to replace <code>noSplices</code> with <code>mempty</code> in <code>Site.hs</code> since <code>noSplices</code> has been deprecated.</p>\n<p>First, in <code>auth-server.cabal</code>, under <code>Build-depends</code> add <code>map-syntax</code>:</p>\n<pre><code>    xmlhtml                   &gt;= <span class=\"hljs-number\">0.1</span>,\n    <span class=\"hljs-built_in\">map</span>-<span class=\"hljs-keyword\">syntax</span>                &gt;= <span class=\"hljs-number\">0.1</span>\n</code></pre>\n<p>Next, we need to add two imports to <code>src/Site.hs</code>:</p>\n<pre><code>&lt;<span class=\"hljs-selector-tag\">code</span> class=<span class=\"hljs-string\">\"haskell\"</span>&gt;import           Data<span class=\"hljs-selector-class\">.Map</span><span class=\"hljs-selector-class\">.Syntax</span>\nimport           Data<span class=\"hljs-selector-class\">.Monoid</span>        (mempty)\n</code></pre>\n<p>as well as replace <code>noSplices</code> with <code>mempty</code>:</p>\n<p>Before:</p>\n<pre><code><span class=\"hljs-attr\">errs</span> = maybe noSplices splice authError\n</code></pre>\n<p>After:</p>\n<pre><code><span class=\"hljs-attr\"> errs </span>=<span class=\"hljs-string\"> maybe mempty splice authError\n</span></code></pre>\n<p>We can now build and run the project:</p>\n<pre><code><span class=\"hljs-symbol\">cd</span> auth_server\n<span class=\"hljs-symbol\">cabal</span> <span class=\"hljs-keyword\">build\n</span>./dist/<span class=\"hljs-keyword\">build/auth-server/auth-server\n</span></code></pre>\n<p>We now have a working Snap 1.0 app to play with. In a future blog post, we’ll explore the creation of a Users service.</p>\n"}}}
{"data":{"root":{"post":{"body":"<p>In this post, I will record the process through which I attempt to use\nDocker Machine to deploy a simple Haskell application on Digital\nOcean.</p>\n<h2 id=\"zero-to-docker\">Zero to Docker</h2>\n<p>To get an OSX docker machine running, I had to download\n<a href=\"https://github.com/docker/machine#try-it-out\">two binaries</a>:\n<code>machine</code> and a version of docker with Identity Authentication. I will\nrefer to these as <code>machine-docker</code> and\n<code>machine-docker-1.3.1-dev-identity-auth</code>\nrespectively. <code>machine-docker</code> is a new binary while\n<code>machine-docker-1.3.1-dev-identity-auth</code> is the usual <code>docker</code> binary\nwith some additional commits.</p>\n<ol>\n<li>Create an OSX machine using virtualbox. Name it <code>test-machine</code>:</li>\n</ol>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>&gt; machine-docker create <span class=\"hljs-_\">-d</span> virtualbox <span class=\"highlight__hljs-built_in___3uuyR\">test</span>-machine\nINFO[0000] Downloading boot2docker...\nINFO[0021] Creating SSH key...\nINFO[0021] Creating VirtualBox VM...\nINFO[0029] Starting VirtualBox VM...\nINFO[0029] Waiting <span class=\"highlight__hljs-keyword___som98\">for</span> VM to start...\nINFO[0061] <span class=\"highlight__hljs-string___1SffY\">\"test-machine\"</span> has been created and is now the active\n           machine. To point Docker at this machine, run: <span class=\"highlight__hljs-built_in___3uuyR\">export</span>\n           DOCKER_HOST=$(machine url) DOCKER_AUTH=identity\n</code></pre>\n<ol start=\"2\">\n<li>Create a function to export the desired env vars. I put this in my <code>~/.zshrc</code></li>\n</ol>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>to-<span class=\"hljs-function\"><span class=\"highlight__hljs-title___1fl8Q\">machine</span></span>(){\n    <span class=\"highlight__hljs-built_in___3uuyR\">export</span> DOCKER_HOST=$(machine-docker url) DOCKER_AUTH=identity\n}\n</code></pre>\n<ol start=\"3\">\n<li>Test with <code>docker ps</code> in a new shell:</li>\n</ol>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>&gt; to-machine\n&gt; machine-docker-1.3.1-dev-identity-auth ps\nCONTAINER ID  IMAGE  COMMAND  CREATED  STATUS  PORTS  NAMES\n</code></pre>\n<h2 id=\"docker-to-digital-ocean\">Docker to Digital Ocean</h2>\n<ol>\n<li>Create a <a href=\"https://cloud.digitalocean.com/settings/applications\">Personal Access Token</a></li>\n</ol>\n<p><a href=\"http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611477/Screenshot-2014-12-20-14.58.25_hvbvt6.png\"><img src=\"http://res.cloudinary.com/diqzbm8lz/image/upload/h_181,w_660/v1428611477/Screenshot-2014-12-20-14.58.25_hvbvt6.png\" alt=\"digital ocean application settings\"></a></p>\n<ol start=\"2\">\n<li>Name and Generate the token</li>\n</ol>\n<p><img src=\"http://res.cloudinary.com/diqzbm8lz/image/upload/v1428611476/Screenshot-2014-12-20-14.58.47_kcvvzv.png\" alt=\"Screenshot 2014-12-20 14.58.47\"></p>\n<ol start=\"3\">\n<li>After getting a token, I set it to <code>DO_TOKEN</code>:</li>\n</ol>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code><span class=\"highlight__hljs-built_in___3uuyR\">export</span> DO_TOKEN=mytokenhere235bhn2b23j5k\n</code></pre>\n<ol start=\"4\">\n<li>Create a machine on Digital Ocean</li>\n</ol>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>&gt; machine-docker create <span class=\"hljs-_\">-d</span> digitalocean --digitalocean-access-token=<span class=\"highlight__hljs-variable___1-KRy\">$DO_TOKEN</span> biscarch/bot\nINFO[0000] Creating SSH key...\nINFO[0000] Creating Digital Ocean droplet...\nINFO[0002] Waiting <span class=\"highlight__hljs-keyword___som98\">for</span> SSH...\nINFO[0103] <span class=\"highlight__hljs-string___1SffY\">\"biscarch/bot\"</span> has been created and is now the active\n           machine. To point Docker at this machine, run: <span class=\"highlight__hljs-built_in___3uuyR\">export</span>\n           DOCKER_HOST=$(machine url) DOCKER_AUTH=identity\n</code></pre>\n<ol start=\"5\">\n<li>Point Docker at the Digital Ocean Machine <code>biscarch/bot</code></li>\n</ol>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>&gt; to-machine\n</code></pre>\n<ol start=\"6\">\n<li><code>docker ps</code> on Digital Ocean</li>\n</ol>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>&gt; machine-docker-1.3.1-dev-identity-auth ps\nThe authenticity of host <span class=\"highlight__hljs-string___1SffY\">\"<span class=\"highlight__hljs-variable___1-KRy\">$ip</span>:<span class=\"highlight__hljs-variable___1-KRy\">$port</span>\"</span> can<span class=\"highlight__hljs-string___1SffY\">'t be established.\nRemote key ID XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX\nAre you sure you want to continue connecting (yes/no)? yes\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\n</span></code></pre>\n<h2 id=\"docker-run-on-digital-ocean\"><code>docker run</code> on Digital Ocean</h2>\n<ol>\n<li>We can run an image using the\n<a href=\"https://github.com/snapforbeginners/barebones\">barebones image</a>\nfrom <a href=\"http://snapforbeginners.com/\">Snap for Beginners</a>\ninteractively with a pseduo-tty:</li>\n</ol>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>&gt; machine-docker-1.3.1-dev-identity-auth run -itp 8000:8000 snapforbeginners/barebones\nno port specified, defaulting to port 8000\nListening on http://0.0.0.0:8000/\n</code></pre>\n<ol start=\"2\">\n<li>We can curl our Digital Ocean machine’s IP to see if the container\nis running:</li>\n</ol>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>&gt; curl <span class=\"highlight__hljs-variable___1-KRy\">$DO_IP</span>:8000\nhello world\n</code></pre>\n<h2 id=\"fin\">Fin</h2>\n<p>That’s it. We have a Docker Engine and a container running on Digital\nOcean. We can also run multiple containers as Daemons and all of the\nnormal goodness of the Docker CLI.</p>\n","attributes":{"title":"Docker Machine","updatedAt":"Dec 21st, 2014","publishedAt":"Dec 21st, 2014","timeToRead":2,"headerImage":null,"url":"/2014/12/21/docker-machine/","canonicalURL":null,"excerpt":"In this post, I will record the process through which I attempt to use\nDocker Machine to deploy a simple Haskell application on…","__typename":"BlogPostAttributes"},"__typename":"BlogPost"},"__typename":"Query"}}}
{"data":{"root":{"post":{"body":"<p>Say we have the following function:</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>&lt;code class=&quot;javascript&quot;&gt;\nfunction increaseBy(x){\n  return function(y){\n    return x + y;\n  }\n}\n</code></pre>\n<p>We can use this function to create new, higher order functions that increase a number by a certain value.</p>\n<p>for example:</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>&lt;code class=&quot;javascript&quot;&gt;\nvar incByThree = increaseBy(3);\n</code></pre>\n<p>gives us a function we can then use later in our code as such:</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>&lt;code class=&quot;javascript&quot;&gt;\nincByThree(4);\n//returns 7\n\nincByThree(5);\n//returns 8\n</code></pre>\n<p>We can also create multiple higher-order functions and have each of them use a different x value;</p>\n<pre class=\"highlight__hljs___FzKxy index__p2___65FBl\"><code>&lt;code class=&quot;javascript&quot;&gt;\nvar incByThree = increaseBy(3);\nvar incByFour = increaseBy(4);\n\nincByThree(6);\n//returns 9\nincbyFour(6);\n//returns 10\n</code></pre>\n","attributes":{"title":"Quick Tip: JavaScript Partially Applied Functions","updatedAt":"Feb 8th, 2013","publishedAt":"Feb 8th, 2013","timeToRead":1,"headerImage":null,"url":"/2013/2/8/quick-tip-javascript-partially-applied-functions/","canonicalURL":null,"excerpt":"Say we have the following function:","__typename":"BlogPostAttributes"},"__typename":"BlogPost"},"__typename":"Query"}}}